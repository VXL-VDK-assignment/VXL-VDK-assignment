ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_hal_rcc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_RCC_DeInit
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	HAL_RCC_DeInit:
  25              	.LFB65:
  26              		.file 1 "./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c"
   1:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
   2:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
   3:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @file    stm32f1xx_hal_rcc.c
   4:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @author  MCD Application Team
   5:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  11:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim
  12:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  13:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  15:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
  16:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  17:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled,
  18:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  19:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  20:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  21:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  22:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  23:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  24:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  25:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  26:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  27:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  28:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  29:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  30:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  31:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS)
  32:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 2


  33:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC Limitations #####
  34:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  35:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
  36:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral
  37:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write
  38:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       from/to registers.
  39:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  40:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  41:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  42:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
  43:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       Workarounds:
  44:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  45:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  46:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  47:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
  48:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
  49:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @attention
  50:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  51:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  52:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * All rights reserved.</center></h2>
  53:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  54:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  55:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * the "License"; You may not use this file except in compliance with the
  56:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * License. You may obtain a copy of the License at:
  57:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  58:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  59:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
  60:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  61:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  62:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  63:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #include "stm32f1xx_hal.h"
  64:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  65:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @addtogroup STM32F1xx_HAL_Driver
  66:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  67:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  68:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  69:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC RCC
  70:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** * @brief RCC HAL module driver
  71:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  72:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  73:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  74:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  75:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  76:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  77:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  78:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  79:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  * @{
  80:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  */
  81:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
  82:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
  83:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  84:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  85:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  86:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  87:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  88:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  89:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 3


  90:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
  91:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
  92:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  93:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
  94:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
  95:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  96:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  97:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  98:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
  99:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 100:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 101:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 102:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 103:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 104:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 105:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 106:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** static void RCC_Delay(uint32_t mdelay);
 107:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 108:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 109:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 110:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 111:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 112:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 113:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 114:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 116:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 117:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim
 118:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 119:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 120:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 121:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 122:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 123:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 124:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and APB2).
 125:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 126:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 127:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 128:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the PLL as System clock source.
 129:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 130:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source.
 131:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 132:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 24 MHz (STM32F100xx) or 4 to 16 MHz (STM32F101x/STM32F102
 133:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 134:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 135:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.
 136:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 137:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 138:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz for STM
 139:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz)
 140:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 141:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 142:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System
 143:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 144:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M3 NMI
 145:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.
 146:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 4


 147:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output SYSCLK, HSI,
 148:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE or PLL clock (divided by 2) on PA8 pin + PLL2CLK, PLL3CLK/2, PLL3CLK and XTI for STM3
 149:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 150:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 151:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 152:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE and PLL.
 153:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 154:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 155:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 156:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 157:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 158:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 159:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 160:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 161:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) RTC: RTC clock can be derived either from the LSI, LSE or HSE clock
 162:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               divided by 128.
 163:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) USB OTG FS and RTC: USB OTG FS require a frequency equal to 48 MHz
 164:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               to work correctly. This clock is derived of the main PLL through PLL Multiplier.
 165:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) I2S interface on STM32F105x/STM32F107x can be derived from PLL3CLK
 166:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) IWDG clock which is always the LSI clock.
 167:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 168:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For STM32F10xxx, the maximum frequency of the SYSCLK and HCLK/PCLK2 is 72 MHz, PCLK1 36 M
 169:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           For STM32F100xx, the maximum frequency of the SYSCLK and HCLK/PCLK1/PCLK2 is 24 MHz.
 170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 171:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 172:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 173:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 174:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 175:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /*
 176:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 178:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 179:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 180:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 181:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 182:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 183:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 184:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 185:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 186:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 187:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 188:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 189:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 190:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 191:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 192:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSE, PLL, PLL2 and PLL3 are OFF
 193:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 194:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 195:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - All interrupts disabled
 196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - All flags are cleared
 197:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 198:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - Peripheral clocks
 199:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 200:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL_StatusTypeDef
 201:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 202:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 203:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 5


  27              		.loc 1 203 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
 204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart;
 205:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 206:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 207:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  39              		.loc 1 207 15
  40 0006 FFF7FEFF 		bl	HAL_GetTick
  41 000a 7860     		str	r0, [r7, #4]
 208:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 209:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set HSION bit */
 210:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  42              		.loc 1 210 3
  43 000c 454B     		ldr	r3, .L12
  44 000e 1B68     		ldr	r3, [r3]
  45 0010 444A     		ldr	r2, .L12
  46 0012 43F00103 		orr	r3, r3, #1
  47 0016 1360     		str	r3, [r2]
 211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 212:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till HSI is ready */
 213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == RESET)
  48              		.loc 1 213 9
  49 0018 08E0     		b	.L2
  50              	.L4:
 214:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 215:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  51              		.loc 1 215 10
  52 001a FFF7FEFF 		bl	HAL_GetTick
  53 001e 0246     		mov	r2, r0
  54              		.loc 1 215 24
  55 0020 7B68     		ldr	r3, [r7, #4]
  56 0022 D31A     		subs	r3, r2, r3
  57              		.loc 1 215 8
  58 0024 022B     		cmp	r3, #2
  59 0026 01D9     		bls	.L2
 216:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 217:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
  60              		.loc 1 217 14
  61 0028 0323     		movs	r3, #3
  62 002a 77E0     		b	.L3
  63              	.L2:
 213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
  64              		.loc 1 213 10
  65 002c 3D4B     		ldr	r3, .L12
  66 002e 1B68     		ldr	r3, [r3]
  67 0030 03F00203 		and	r3, r3, #2
 213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 6


  68              		.loc 1 213 9
  69 0034 002B     		cmp	r3, #0
  70 0036 F0D0     		beq	.L4
 218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 219:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 220:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 221:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set HSITRIM bits to the reset value */
 222:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, (0x10U << RCC_CR_HSITRIM_Pos));
  71              		.loc 1 222 3
  72 0038 3A4B     		ldr	r3, .L12
  73 003a 1B68     		ldr	r3, [r3]
  74 003c 23F0F803 		bic	r3, r3, #248
  75 0040 384A     		ldr	r2, .L12
  76 0042 43F08003 		orr	r3, r3, #128
  77 0046 1360     		str	r3, [r2]
 223:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 224:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 225:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  78              		.loc 1 225 15
  79 0048 FFF7FEFF 		bl	HAL_GetTick
  80 004c 7860     		str	r0, [r7, #4]
 226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 227:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR register */
 228:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  81              		.loc 1 228 3
  82 004e 354B     		ldr	r3, .L12
  83 0050 0022     		movs	r2, #0
  84 0052 5A60     		str	r2, [r3, #4]
 229:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till clock switch is ready */
 231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RESET)
  85              		.loc 1 231 9
  86 0054 0AE0     		b	.L5
  87              	.L6:
 232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 233:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
  88              		.loc 1 233 10
  89 0056 FFF7FEFF 		bl	HAL_GetTick
  90 005a 0246     		mov	r2, r0
  91              		.loc 1 233 24
  92 005c 7B68     		ldr	r3, [r7, #4]
  93 005e D31A     		subs	r3, r2, r3
  94              		.loc 1 233 8
  95 0060 41F28832 		movw	r2, #5000
  96 0064 9342     		cmp	r3, r2
  97 0066 01D9     		bls	.L5
 234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 235:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
  98              		.loc 1 235 14
  99 0068 0323     		movs	r3, #3
 100 006a 57E0     		b	.L3
 101              	.L5:
 231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 102              		.loc 1 231 10
 103 006c 2D4B     		ldr	r3, .L12
 104 006e 5B68     		ldr	r3, [r3, #4]
 105 0070 03F00C03 		and	r3, r3, #12
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 7


 231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 106              		.loc 1 231 9
 107 0074 002B     		cmp	r3, #0
 108 0076 EED1     		bne	.L6
 236:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 237:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 238:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 239:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 240:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 109              		.loc 1 240 19
 110 0078 2B4B     		ldr	r3, .L12+4
 111 007a 2C4A     		ldr	r2, .L12+8
 112 007c 1A60     		str	r2, [r3]
 241:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 243:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (HAL_InitTick(uwTickPrio) != HAL_OK)
 113              		.loc 1 243 7
 114 007e 2C4B     		ldr	r3, .L12+12
 115 0080 1B68     		ldr	r3, [r3]
 116 0082 1846     		mov	r0, r3
 117 0084 FFF7FEFF 		bl	HAL_InitTick
 118 0088 0346     		mov	r3, r0
 119              		.loc 1 243 6
 120 008a 002B     		cmp	r3, #0
 121 008c 01D0     		beq	.L7
 244:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 245:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     return HAL_ERROR;
 122              		.loc 1 245 12
 123 008e 0123     		movs	r3, #1
 124 0090 44E0     		b	.L3
 125              	.L7:
 246:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 247:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 248:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 249:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 126              		.loc 1 249 15
 127 0092 FFF7FEFF 		bl	HAL_GetTick
 128 0096 7860     		str	r0, [r7, #4]
 250:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 251:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Second step is to clear PLLON bit */
 252:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON);
 129              		.loc 1 252 3
 130 0098 224B     		ldr	r3, .L12
 131 009a 1B68     		ldr	r3, [r3]
 132 009c 214A     		ldr	r2, .L12
 133 009e 23F08073 		bic	r3, r3, #16777216
 134 00a2 1360     		str	r3, [r2]
 253:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 254:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till PLL is disabled */
 255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != RESET)
 135              		.loc 1 255 9
 136 00a4 08E0     		b	.L8
 137              	.L9:
 256:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 257:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 138              		.loc 1 257 10
 139 00a6 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 8


 140 00aa 0246     		mov	r2, r0
 141              		.loc 1 257 24
 142 00ac 7B68     		ldr	r3, [r7, #4]
 143 00ae D31A     		subs	r3, r2, r3
 144              		.loc 1 257 8
 145 00b0 022B     		cmp	r3, #2
 146 00b2 01D9     		bls	.L8
 258:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 259:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 147              		.loc 1 259 14
 148 00b4 0323     		movs	r3, #3
 149 00b6 31E0     		b	.L3
 150              	.L8:
 255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 151              		.loc 1 255 10
 152 00b8 1A4B     		ldr	r3, .L12
 153 00ba 1B68     		ldr	r3, [r3]
 154 00bc 03F00073 		and	r3, r3, #33554432
 255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 155              		.loc 1 255 9
 156 00c0 002B     		cmp	r3, #0
 157 00c2 F0D1     		bne	.L9
 260:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 261:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 262:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 263:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Ensure to reset PLLSRC and PLLMUL bits */
 264:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
 158              		.loc 1 264 3
 159 00c4 174B     		ldr	r3, .L12
 160 00c6 0022     		movs	r2, #0
 161 00c8 5A60     		str	r2, [r3, #4]
 265:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 266:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 267:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 162              		.loc 1 267 15
 163 00ca FFF7FEFF 		bl	HAL_GetTick
 164 00ce 7860     		str	r0, [r7, #4]
 268:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 269:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEON & CSSON bits */
 270:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_CSSON);
 165              		.loc 1 270 3
 166 00d0 144B     		ldr	r3, .L12
 167 00d2 1B68     		ldr	r3, [r3]
 168 00d4 134A     		ldr	r2, .L12
 169 00d6 23F41023 		bic	r3, r3, #589824
 170 00da 1360     		str	r3, [r2]
 271:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 272:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till HSE is disabled */
 273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != RESET)
 171              		.loc 1 273 9
 172 00dc 08E0     		b	.L10
 173              	.L11:
 274:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 275:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 174              		.loc 1 275 10
 175 00de FFF7FEFF 		bl	HAL_GetTick
 176 00e2 0246     		mov	r2, r0
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 9


 177              		.loc 1 275 24
 178 00e4 7B68     		ldr	r3, [r7, #4]
 179 00e6 D31A     		subs	r3, r2, r3
 180              		.loc 1 275 8
 181 00e8 642B     		cmp	r3, #100
 182 00ea 01D9     		bls	.L10
 276:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 277:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 183              		.loc 1 277 14
 184 00ec 0323     		movs	r3, #3
 185 00ee 15E0     		b	.L3
 186              	.L10:
 273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 187              		.loc 1 273 10
 188 00f0 0C4B     		ldr	r3, .L12
 189 00f2 1B68     		ldr	r3, [r3]
 190 00f4 03F40033 		and	r3, r3, #131072
 273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 191              		.loc 1 273 9
 192 00f8 002B     		cmp	r3, #0
 193 00fa F0D1     		bne	.L11
 278:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 279:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 280:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 281:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 282:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 194              		.loc 1 282 3
 195 00fc 094B     		ldr	r3, .L12
 196 00fe 1B68     		ldr	r3, [r3]
 197 0100 084A     		ldr	r2, .L12
 198 0102 23F48023 		bic	r3, r3, #262144
 199 0106 1360     		str	r3, [r2]
 283:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 284:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_PLL2_SUPPORT)
 285:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 286:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 287:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 288:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Clear PLL2ON bit */
 289:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL2ON);
 290:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 291:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till PLL2 is disabled */
 292:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL2RDY) != RESET)
 293:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 294:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 295:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 296:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 297:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 298:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 299:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_PLL2_SUPPORT */
 300:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_PLLI2S_SUPPORT)
 302:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get Start Tick */
 303:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 304:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 305:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Clear PLL3ON bit */
 306:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLL3ON);
 307:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 10


 308:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Wait till PLL3 is disabled */
 309:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLL3RDY) != RESET)
 310:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 311:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLLI2S_TIMEOUT_VALUE)
 312:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 313:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_TIMEOUT;
 314:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 315:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 316:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_PLLI2S_SUPPORT */
 317:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 318:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 319:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR2 register */
 320:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 321:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1 */
 322:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 323:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset all CSR flags */
 324:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 200              		.loc 1 324 3
 201 0108 064B     		ldr	r3, .L12
 202 010a 5B6A     		ldr	r3, [r3, #36]
 203 010c 054A     		ldr	r2, .L12
 204 010e 43F08073 		orr	r3, r3, #16777216
 205 0112 5362     		str	r3, [r2, #36]
 325:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 326:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Disable all interrupts */
 327:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
 206              		.loc 1 327 3
 207 0114 034B     		ldr	r3, .L12
 208 0116 0022     		movs	r2, #0
 209 0118 9A60     		str	r2, [r3, #8]
 328:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 329:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 210              		.loc 1 329 10
 211 011a 0023     		movs	r3, #0
 212              	.L3:
 330:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 213              		.loc 1 330 1
 214 011c 1846     		mov	r0, r3
 215 011e 0837     		adds	r7, r7, #8
 216              		.cfi_def_cfa_offset 8
 217 0120 BD46     		mov	sp, r7
 218              		.cfi_def_cfa_register 13
 219              		@ sp needed
 220 0122 80BD     		pop	{r7, pc}
 221              	.L13:
 222              		.align	2
 223              	.L12:
 224 0124 00100240 		.word	1073876992
 225 0128 00000000 		.word	SystemCoreClock
 226 012c 00127A00 		.word	8000000
 227 0130 00000000 		.word	uwTickPrio
 228              		.cfi_endproc
 229              	.LFE65:
 231              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 232              		.align	1
 233              		.global	HAL_RCC_OscConfig
 234              		.syntax unified
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 11


 235              		.thumb
 236              		.thumb_func
 237              		.fpu softvfp
 239              	HAL_RCC_OscConfig:
 240              	.LFB66:
 331:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 332:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 333:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 334:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 335:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 336:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 337:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 338:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when USB OTG FS clock is enabled (specific to devices with USB 
 339:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 340:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 341:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 342:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 343:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 344:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 345:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 346:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 347:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 348:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 241              		.loc 1 348 1
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 24
 244              		@ frame_needed = 1, uses_anonymous_args = 0
 245 0000 80B5     		push	{r7, lr}
 246              		.cfi_def_cfa_offset 8
 247              		.cfi_offset 7, -8
 248              		.cfi_offset 14, -4
 249 0002 86B0     		sub	sp, sp, #24
 250              		.cfi_def_cfa_offset 32
 251 0004 00AF     		add	r7, sp, #0
 252              		.cfi_def_cfa_register 7
 253 0006 7860     		str	r0, [r7, #4]
 349:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart;
 350:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t pll_config;
 351:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 352:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check Null pointer */
 353:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (RCC_OscInitStruct == NULL)
 254              		.loc 1 353 6
 255 0008 7B68     		ldr	r3, [r7, #4]
 256 000a 002B     		cmp	r3, #0
 257 000c 01D1     		bne	.L15
 354:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 355:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     return HAL_ERROR;
 258              		.loc 1 355 12
 259 000e 0123     		movs	r3, #1
 260 0010 6CE2     		b	.L16
 261              	.L15:
 356:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 357:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 358:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 359:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 360:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 361:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 12


 362:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 262              		.loc 1 362 26
 263 0012 7B68     		ldr	r3, [r7, #4]
 264 0014 1B68     		ldr	r3, [r3]
 265              		.loc 1 362 44
 266 0016 03F00103 		and	r3, r3, #1
 267              		.loc 1 362 6
 268 001a 002B     		cmp	r3, #0
 269 001c 00F08780 		beq	.L17
 363:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 364:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 365:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 366:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 367:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 368:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE)
 270              		.loc 1 368 10
 271 0020 924B     		ldr	r3, .L73
 272 0022 5B68     		ldr	r3, [r3, #4]
 273 0024 03F00C03 		and	r3, r3, #12
 274              		.loc 1 368 8
 275 0028 042B     		cmp	r3, #4
 276 002a 0CD0     		beq	.L18
 369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL
 277              		.loc 1 369 14
 278 002c 8F4B     		ldr	r3, .L73
 279 002e 5B68     		ldr	r3, [r3, #4]
 280 0030 03F00C03 		and	r3, r3, #12
 281              		.loc 1 369 9
 282 0034 082B     		cmp	r3, #8
 283 0036 12D1     		bne	.L19
 284              		.loc 1 369 83 discriminator 1
 285 0038 8C4B     		ldr	r3, .L73
 286 003a 5B68     		ldr	r3, [r3, #4]
 287 003c 03F48033 		and	r3, r3, #65536
 288              		.loc 1 369 79 discriminator 1
 289 0040 B3F5803F 		cmp	r3, #65536
 290 0044 0BD1     		bne	.L19
 291              	.L18:
 370:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 371:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE
 292              		.loc 1 371 12
 293 0046 894B     		ldr	r3, .L73
 294 0048 1B68     		ldr	r3, [r3]
 295 004a 03F40033 		and	r3, r3, #131072
 296              		.loc 1 371 10
 297 004e 002B     		cmp	r3, #0
 298 0050 6CD0     		beq	.L72
 299              		.loc 1 371 79 discriminator 1
 300 0052 7B68     		ldr	r3, [r7, #4]
 301 0054 5B68     		ldr	r3, [r3, #4]
 302              		.loc 1 371 58 discriminator 1
 303 0056 002B     		cmp	r3, #0
 304 0058 68D1     		bne	.L72
 372:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 373:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 305              		.loc 1 373 16
 306 005a 0123     		movs	r3, #1
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 13


 307 005c 46E2     		b	.L16
 308              	.L19:
 374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 375:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 376:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 377:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 378:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 379:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 309              		.loc 1 379 7
 310 005e 7B68     		ldr	r3, [r7, #4]
 311 0060 5B68     		ldr	r3, [r3, #4]
 312 0062 B3F5803F 		cmp	r3, #65536
 313 0066 06D1     		bne	.L21
 314              		.loc 1 379 7 is_stmt 0 discriminator 1
 315 0068 804B     		ldr	r3, .L73
 316 006a 1B68     		ldr	r3, [r3]
 317 006c 7F4A     		ldr	r2, .L73
 318 006e 43F48033 		orr	r3, r3, #65536
 319 0072 1360     		str	r3, [r2]
 320 0074 2EE0     		b	.L22
 321              	.L21:
 322              		.loc 1 379 7 discriminator 2
 323 0076 7B68     		ldr	r3, [r7, #4]
 324 0078 5B68     		ldr	r3, [r3, #4]
 325 007a 002B     		cmp	r3, #0
 326 007c 0CD1     		bne	.L23
 327              		.loc 1 379 7 discriminator 3
 328 007e 7B4B     		ldr	r3, .L73
 329 0080 1B68     		ldr	r3, [r3]
 330 0082 7A4A     		ldr	r2, .L73
 331 0084 23F48033 		bic	r3, r3, #65536
 332 0088 1360     		str	r3, [r2]
 333 008a 784B     		ldr	r3, .L73
 334 008c 1B68     		ldr	r3, [r3]
 335 008e 774A     		ldr	r2, .L73
 336 0090 23F48023 		bic	r3, r3, #262144
 337 0094 1360     		str	r3, [r2]
 338 0096 1DE0     		b	.L22
 339              	.L23:
 340              		.loc 1 379 7 discriminator 4
 341 0098 7B68     		ldr	r3, [r7, #4]
 342 009a 5B68     		ldr	r3, [r3, #4]
 343 009c B3F5A02F 		cmp	r3, #327680
 344 00a0 0CD1     		bne	.L24
 345              		.loc 1 379 7 discriminator 5
 346 00a2 724B     		ldr	r3, .L73
 347 00a4 1B68     		ldr	r3, [r3]
 348 00a6 714A     		ldr	r2, .L73
 349 00a8 43F48023 		orr	r3, r3, #262144
 350 00ac 1360     		str	r3, [r2]
 351 00ae 6F4B     		ldr	r3, .L73
 352 00b0 1B68     		ldr	r3, [r3]
 353 00b2 6E4A     		ldr	r2, .L73
 354 00b4 43F48033 		orr	r3, r3, #65536
 355 00b8 1360     		str	r3, [r2]
 356 00ba 0BE0     		b	.L22
 357              	.L24:
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 14


 358              		.loc 1 379 7 discriminator 6
 359 00bc 6B4B     		ldr	r3, .L73
 360 00be 1B68     		ldr	r3, [r3]
 361 00c0 6A4A     		ldr	r2, .L73
 362 00c2 23F48033 		bic	r3, r3, #65536
 363 00c6 1360     		str	r3, [r2]
 364 00c8 684B     		ldr	r3, .L73
 365 00ca 1B68     		ldr	r3, [r3]
 366 00cc 674A     		ldr	r2, .L73
 367 00ce 23F48023 		bic	r3, r3, #262144
 368 00d2 1360     		str	r3, [r2]
 369              	.L22:
 380:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 381:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 382:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSE State */
 383:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 370              		.loc 1 383 28 is_stmt 1
 371 00d4 7B68     		ldr	r3, [r7, #4]
 372 00d6 5B68     		ldr	r3, [r3, #4]
 373              		.loc 1 383 10
 374 00d8 002B     		cmp	r3, #0
 375 00da 13D0     		beq	.L25
 384:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 385:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 386:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 376              		.loc 1 386 21
 377 00dc FFF7FEFF 		bl	HAL_GetTick
 378 00e0 3861     		str	r0, [r7, #16]
 387:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 388:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is ready */
 389:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 379              		.loc 1 389 15
 380 00e2 08E0     		b	.L26
 381              	.L27:
 390:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 391:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 382              		.loc 1 391 16
 383 00e4 FFF7FEFF 		bl	HAL_GetTick
 384 00e8 0246     		mov	r2, r0
 385              		.loc 1 391 30
 386 00ea 3B69     		ldr	r3, [r7, #16]
 387 00ec D31A     		subs	r3, r2, r3
 388              		.loc 1 391 14
 389 00ee 642B     		cmp	r3, #100
 390 00f0 01D9     		bls	.L26
 392:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 393:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 391              		.loc 1 393 20
 392 00f2 0323     		movs	r3, #3
 393 00f4 FAE1     		b	.L16
 394              	.L26:
 389:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 395              		.loc 1 389 16
 396 00f6 5D4B     		ldr	r3, .L73
 397 00f8 1B68     		ldr	r3, [r3]
 398 00fa 03F40033 		and	r3, r3, #131072
 389:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 15


 399              		.loc 1 389 15
 400 00fe 002B     		cmp	r3, #0
 401 0100 F0D0     		beq	.L27
 402 0102 14E0     		b	.L17
 403              	.L25:
 394:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 395:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 396:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 397:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 398:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 399:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 400:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 404              		.loc 1 400 21
 405 0104 FFF7FEFF 		bl	HAL_GetTick
 406 0108 3861     		str	r0, [r7, #16]
 401:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 402:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 407              		.loc 1 403 15
 408 010a 08E0     		b	.L28
 409              	.L29:
 404:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 405:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 410              		.loc 1 405 16
 411 010c FFF7FEFF 		bl	HAL_GetTick
 412 0110 0246     		mov	r2, r0
 413              		.loc 1 405 30
 414 0112 3B69     		ldr	r3, [r7, #16]
 415 0114 D31A     		subs	r3, r2, r3
 416              		.loc 1 405 14
 417 0116 642B     		cmp	r3, #100
 418 0118 01D9     		bls	.L28
 406:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 407:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 419              		.loc 1 407 20
 420 011a 0323     		movs	r3, #3
 421 011c E6E1     		b	.L16
 422              	.L28:
 403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 423              		.loc 1 403 16
 424 011e 534B     		ldr	r3, .L73
 425 0120 1B68     		ldr	r3, [r3]
 426 0122 03F40033 		and	r3, r3, #131072
 403:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 427              		.loc 1 403 15
 428 0126 002B     		cmp	r3, #0
 429 0128 F0D1     		bne	.L29
 430 012a 00E0     		b	.L17
 431              	.L72:
 371:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 432              		.loc 1 371 10
 433 012c 00BF     		nop
 434              	.L17:
 408:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 409:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 410:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 411:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 16


 412:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 413:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 414:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 435              		.loc 1 414 26
 436 012e 7B68     		ldr	r3, [r7, #4]
 437 0130 1B68     		ldr	r3, [r3]
 438              		.loc 1 414 44
 439 0132 03F00203 		and	r3, r3, #2
 440              		.loc 1 414 6
 441 0136 002B     		cmp	r3, #0
 442 0138 63D0     		beq	.L30
 415:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 416:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 417:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 418:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 419:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 420:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 421:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI)
 443              		.loc 1 421 10
 444 013a 4C4B     		ldr	r3, .L73
 445 013c 5B68     		ldr	r3, [r3, #4]
 446 013e 03F00C03 		and	r3, r3, #12
 447              		.loc 1 421 8
 448 0142 002B     		cmp	r3, #0
 449 0144 0BD0     		beq	.L31
 422:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL
 450              		.loc 1 422 14
 451 0146 494B     		ldr	r3, .L73
 452 0148 5B68     		ldr	r3, [r3, #4]
 453 014a 03F00C03 		and	r3, r3, #12
 454              		.loc 1 422 9
 455 014e 082B     		cmp	r3, #8
 456 0150 1CD1     		bne	.L32
 457              		.loc 1 422 83 discriminator 1
 458 0152 464B     		ldr	r3, .L73
 459 0154 5B68     		ldr	r3, [r3, #4]
 460 0156 03F48033 		and	r3, r3, #65536
 461              		.loc 1 422 79 discriminator 1
 462 015a 002B     		cmp	r3, #0
 463 015c 16D1     		bne	.L32
 464              	.L31:
 423:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 424:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 425:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI
 465              		.loc 1 425 12
 466 015e 434B     		ldr	r3, .L73
 467 0160 1B68     		ldr	r3, [r3]
 468 0162 03F00203 		and	r3, r3, #2
 469              		.loc 1 425 10
 470 0166 002B     		cmp	r3, #0
 471 0168 05D0     		beq	.L33
 472              		.loc 1 425 79 discriminator 1
 473 016a 7B68     		ldr	r3, [r7, #4]
 474 016c 1B69     		ldr	r3, [r3, #16]
 475              		.loc 1 425 58 discriminator 1
 476 016e 012B     		cmp	r3, #1
 477 0170 01D0     		beq	.L33
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 17


 426:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 427:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 478              		.loc 1 427 16
 479 0172 0123     		movs	r3, #1
 480 0174 BAE1     		b	.L16
 481              	.L33:
 428:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 429:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 430:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 431:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 432:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 433:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 482              		.loc 1 433 9
 483 0176 3D4B     		ldr	r3, .L73
 484 0178 1B68     		ldr	r3, [r3]
 485 017a 23F0F802 		bic	r2, r3, #248
 486 017e 7B68     		ldr	r3, [r7, #4]
 487 0180 5B69     		ldr	r3, [r3, #20]
 488 0182 DB00     		lsls	r3, r3, #3
 489 0184 3949     		ldr	r1, .L73
 490 0186 1343     		orrs	r3, r3, r2
 491 0188 0B60     		str	r3, [r1]
 425:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 492              		.loc 1 425 10
 493 018a 3AE0     		b	.L30
 494              	.L32:
 434:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 435:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 436:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 437:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 438:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI State */
 439:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 495              		.loc 1 439 28
 496 018c 7B68     		ldr	r3, [r7, #4]
 497 018e 1B69     		ldr	r3, [r3, #16]
 498              		.loc 1 439 10
 499 0190 002B     		cmp	r3, #0
 500 0192 20D0     		beq	.L34
 440:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 441:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 442:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 501              		.loc 1 442 9
 502 0194 364B     		ldr	r3, .L73+4
 503 0196 0122     		movs	r2, #1
 504 0198 1A60     		str	r2, [r3]
 443:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 444:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 445:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 505              		.loc 1 445 21
 506 019a FFF7FEFF 		bl	HAL_GetTick
 507 019e 3861     		str	r0, [r7, #16]
 446:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 447:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is ready */
 448:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 508              		.loc 1 448 15
 509 01a0 08E0     		b	.L35
 510              	.L36:
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 18


 449:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 450:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 511              		.loc 1 450 16
 512 01a2 FFF7FEFF 		bl	HAL_GetTick
 513 01a6 0246     		mov	r2, r0
 514              		.loc 1 450 30
 515 01a8 3B69     		ldr	r3, [r7, #16]
 516 01aa D31A     		subs	r3, r2, r3
 517              		.loc 1 450 14
 518 01ac 022B     		cmp	r3, #2
 519 01ae 01D9     		bls	.L35
 451:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 452:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 520              		.loc 1 452 20
 521 01b0 0323     		movs	r3, #3
 522 01b2 9BE1     		b	.L16
 523              	.L35:
 448:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 524              		.loc 1 448 16
 525 01b4 2D4B     		ldr	r3, .L73
 526 01b6 1B68     		ldr	r3, [r3]
 527 01b8 03F00203 		and	r3, r3, #2
 448:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 528              		.loc 1 448 15
 529 01bc 002B     		cmp	r3, #0
 530 01be F0D0     		beq	.L36
 453:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 454:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 455:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 456:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 457:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 531              		.loc 1 457 9
 532 01c0 2A4B     		ldr	r3, .L73
 533 01c2 1B68     		ldr	r3, [r3]
 534 01c4 23F0F802 		bic	r2, r3, #248
 535 01c8 7B68     		ldr	r3, [r7, #4]
 536 01ca 5B69     		ldr	r3, [r3, #20]
 537 01cc DB00     		lsls	r3, r3, #3
 538 01ce 2749     		ldr	r1, .L73
 539 01d0 1343     		orrs	r3, r3, r2
 540 01d2 0B60     		str	r3, [r1]
 541 01d4 15E0     		b	.L30
 542              	.L34:
 458:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 459:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 460:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 461:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 462:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 543              		.loc 1 462 9
 544 01d6 264B     		ldr	r3, .L73+4
 545 01d8 0022     		movs	r2, #0
 546 01da 1A60     		str	r2, [r3]
 463:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 464:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 465:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 547              		.loc 1 465 21
 548 01dc FFF7FEFF 		bl	HAL_GetTick
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 19


 549 01e0 3861     		str	r0, [r7, #16]
 466:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 467:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 468:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 550              		.loc 1 468 15
 551 01e2 08E0     		b	.L37
 552              	.L38:
 469:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 470:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 553              		.loc 1 470 16
 554 01e4 FFF7FEFF 		bl	HAL_GetTick
 555 01e8 0246     		mov	r2, r0
 556              		.loc 1 470 30
 557 01ea 3B69     		ldr	r3, [r7, #16]
 558 01ec D31A     		subs	r3, r2, r3
 559              		.loc 1 470 14
 560 01ee 022B     		cmp	r3, #2
 561 01f0 01D9     		bls	.L37
 471:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 472:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 562              		.loc 1 472 20
 563 01f2 0323     		movs	r3, #3
 564 01f4 7AE1     		b	.L16
 565              	.L37:
 468:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 566              		.loc 1 468 16
 567 01f6 1D4B     		ldr	r3, .L73
 568 01f8 1B68     		ldr	r3, [r3]
 569 01fa 03F00203 		and	r3, r3, #2
 468:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 570              		.loc 1 468 15
 571 01fe 002B     		cmp	r3, #0
 572 0200 F0D1     		bne	.L38
 573              	.L30:
 473:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 474:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 475:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 476:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 477:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 478:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
 479:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 574              		.loc 1 479 26
 575 0202 7B68     		ldr	r3, [r7, #4]
 576 0204 1B68     		ldr	r3, [r3]
 577              		.loc 1 479 44
 578 0206 03F00803 		and	r3, r3, #8
 579              		.loc 1 479 6
 580 020a 002B     		cmp	r3, #0
 581 020c 3AD0     		beq	.L39
 480:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 481:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 482:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 483:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 484:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSI State */
 485:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 582              		.loc 1 485 26
 583 020e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 20


 584 0210 9B69     		ldr	r3, [r3, #24]
 585              		.loc 1 485 8
 586 0212 002B     		cmp	r3, #0
 587 0214 19D0     		beq	.L40
 486:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 487:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 488:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 588              		.loc 1 488 7
 589 0216 174B     		ldr	r3, .L73+8
 590 0218 0122     		movs	r2, #1
 591 021a 1A60     		str	r2, [r3]
 489:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 490:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 491:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 592              		.loc 1 491 19
 593 021c FFF7FEFF 		bl	HAL_GetTick
 594 0220 3861     		str	r0, [r7, #16]
 492:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 493:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is ready */
 494:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 595              		.loc 1 494 13
 596 0222 08E0     		b	.L41
 597              	.L42:
 495:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 496:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 598              		.loc 1 496 14
 599 0224 FFF7FEFF 		bl	HAL_GetTick
 600 0228 0246     		mov	r2, r0
 601              		.loc 1 496 28
 602 022a 3B69     		ldr	r3, [r7, #16]
 603 022c D31A     		subs	r3, r2, r3
 604              		.loc 1 496 12
 605 022e 022B     		cmp	r3, #2
 606 0230 01D9     		bls	.L41
 497:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 498:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 607              		.loc 1 498 18
 608 0232 0323     		movs	r3, #3
 609 0234 5AE1     		b	.L16
 610              	.L41:
 494:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 611              		.loc 1 494 14
 612 0236 0D4B     		ldr	r3, .L73
 613 0238 5B6A     		ldr	r3, [r3, #36]
 614 023a 03F00203 		and	r3, r3, #2
 494:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 615              		.loc 1 494 13
 616 023e 002B     		cmp	r3, #0
 617 0240 F0D0     		beq	.L42
 499:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 500:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 501:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /*  To have a fully stabilized clock in the specified range, a software delay of 1ms
 502:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           should be added.*/
 503:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       RCC_Delay(1);
 618              		.loc 1 503 7
 619 0242 0120     		movs	r0, #1
 620 0244 FFF7FEFF 		bl	RCC_Delay
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 21


 621 0248 1CE0     		b	.L39
 622              	.L40:
 504:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 505:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 506:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 507:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 508:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 623              		.loc 1 508 7
 624 024a 0A4B     		ldr	r3, .L73+8
 625 024c 0022     		movs	r2, #0
 626 024e 1A60     		str	r2, [r3]
 509:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 510:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 511:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 627              		.loc 1 511 19
 628 0250 FFF7FEFF 		bl	HAL_GetTick
 629 0254 3861     		str	r0, [r7, #16]
 512:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 513:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is disabled */
 514:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 630              		.loc 1 514 13
 631 0256 0FE0     		b	.L43
 632              	.L44:
 515:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 516:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 633              		.loc 1 516 14
 634 0258 FFF7FEFF 		bl	HAL_GetTick
 635 025c 0246     		mov	r2, r0
 636              		.loc 1 516 28
 637 025e 3B69     		ldr	r3, [r7, #16]
 638 0260 D31A     		subs	r3, r2, r3
 639              		.loc 1 516 12
 640 0262 022B     		cmp	r3, #2
 641 0264 08D9     		bls	.L43
 517:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 518:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 642              		.loc 1 518 18
 643 0266 0323     		movs	r3, #3
 644 0268 40E1     		b	.L16
 645              	.L74:
 646 026a 00BF     		.align	2
 647              	.L73:
 648 026c 00100240 		.word	1073876992
 649 0270 00004242 		.word	1111621632
 650 0274 80044242 		.word	1111622784
 651              	.L43:
 514:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 652              		.loc 1 514 14
 653 0278 9E4B     		ldr	r3, .L75
 654 027a 5B6A     		ldr	r3, [r3, #36]
 655 027c 03F00203 		and	r3, r3, #2
 514:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 656              		.loc 1 514 13
 657 0280 002B     		cmp	r3, #0
 658 0282 E9D1     		bne	.L44
 659              	.L39:
 519:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 22


 520:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 521:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 522:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 523:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 524:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 660              		.loc 1 524 26
 661 0284 7B68     		ldr	r3, [r7, #4]
 662 0286 1B68     		ldr	r3, [r3]
 663              		.loc 1 524 44
 664 0288 03F00403 		and	r3, r3, #4
 665              		.loc 1 524 6
 666 028c 002B     		cmp	r3, #0
 667 028e 00F0A680 		beq	.L45
 668              	.LBB2:
 525:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 526:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 669              		.loc 1 526 22
 670 0292 0023     		movs	r3, #0
 671 0294 FB75     		strb	r3, [r7, #23]
 527:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 528:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 529:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 530:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 531:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 532:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 533:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 672              		.loc 1 533 9
 673 0296 974B     		ldr	r3, .L75
 674 0298 DB69     		ldr	r3, [r3, #28]
 675 029a 03F08053 		and	r3, r3, #268435456
 676              		.loc 1 533 8
 677 029e 002B     		cmp	r3, #0
 678 02a0 0DD1     		bne	.L46
 679              	.LBB3:
 534:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 535:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 680              		.loc 1 535 7
 681 02a2 944B     		ldr	r3, .L75
 682 02a4 DB69     		ldr	r3, [r3, #28]
 683 02a6 934A     		ldr	r2, .L75
 684 02a8 43F08053 		orr	r3, r3, #268435456
 685 02ac D361     		str	r3, [r2, #28]
 686 02ae 914B     		ldr	r3, .L75
 687 02b0 DB69     		ldr	r3, [r3, #28]
 688 02b2 03F08053 		and	r3, r3, #268435456
 689 02b6 BB60     		str	r3, [r7, #8]
 690 02b8 BB68     		ldr	r3, [r7, #8]
 691              	.LBE3:
 536:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pwrclkchanged = SET;
 692              		.loc 1 536 21
 693 02ba 0123     		movs	r3, #1
 694 02bc FB75     		strb	r3, [r7, #23]
 695              	.L46:
 537:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 538:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 539:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 696              		.loc 1 539 9
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 23


 697 02be 8E4B     		ldr	r3, .L75+4
 698 02c0 1B68     		ldr	r3, [r3]
 699 02c2 03F48073 		and	r3, r3, #256
 700              		.loc 1 539 8
 701 02c6 002B     		cmp	r3, #0
 702 02c8 18D1     		bne	.L47
 540:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 541:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 542:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 703              		.loc 1 542 7
 704 02ca 8B4B     		ldr	r3, .L75+4
 705 02cc 1B68     		ldr	r3, [r3]
 706 02ce 8A4A     		ldr	r2, .L75+4
 707 02d0 43F48073 		orr	r3, r3, #256
 708 02d4 1360     		str	r3, [r2]
 543:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 544:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 545:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 709              		.loc 1 545 19
 710 02d6 FFF7FEFF 		bl	HAL_GetTick
 711 02da 3861     		str	r0, [r7, #16]
 546:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 547:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 712              		.loc 1 547 13
 713 02dc 08E0     		b	.L48
 714              	.L49:
 548:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 549:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 715              		.loc 1 549 14
 716 02de FFF7FEFF 		bl	HAL_GetTick
 717 02e2 0246     		mov	r2, r0
 718              		.loc 1 549 28
 719 02e4 3B69     		ldr	r3, [r7, #16]
 720 02e6 D31A     		subs	r3, r2, r3
 721              		.loc 1 549 12
 722 02e8 642B     		cmp	r3, #100
 723 02ea 01D9     		bls	.L48
 550:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 551:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 724              		.loc 1 551 18
 725 02ec 0323     		movs	r3, #3
 726 02ee FDE0     		b	.L16
 727              	.L48:
 547:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 728              		.loc 1 547 14
 729 02f0 814B     		ldr	r3, .L75+4
 730 02f2 1B68     		ldr	r3, [r3]
 731 02f4 03F48073 		and	r3, r3, #256
 547:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 732              		.loc 1 547 13
 733 02f8 002B     		cmp	r3, #0
 734 02fa F0D0     		beq	.L49
 735              	.L47:
 552:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 553:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 554:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 555:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 24


 556:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 557:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 736              		.loc 1 557 5
 737 02fc 7B68     		ldr	r3, [r7, #4]
 738 02fe DB68     		ldr	r3, [r3, #12]
 739 0300 012B     		cmp	r3, #1
 740 0302 06D1     		bne	.L50
 741              		.loc 1 557 5 is_stmt 0 discriminator 1
 742 0304 7B4B     		ldr	r3, .L75
 743 0306 1B6A     		ldr	r3, [r3, #32]
 744 0308 7A4A     		ldr	r2, .L75
 745 030a 43F00103 		orr	r3, r3, #1
 746 030e 1362     		str	r3, [r2, #32]
 747 0310 2DE0     		b	.L51
 748              	.L50:
 749              		.loc 1 557 5 discriminator 2
 750 0312 7B68     		ldr	r3, [r7, #4]
 751 0314 DB68     		ldr	r3, [r3, #12]
 752 0316 002B     		cmp	r3, #0
 753 0318 0CD1     		bne	.L52
 754              		.loc 1 557 5 discriminator 3
 755 031a 764B     		ldr	r3, .L75
 756 031c 1B6A     		ldr	r3, [r3, #32]
 757 031e 754A     		ldr	r2, .L75
 758 0320 23F00103 		bic	r3, r3, #1
 759 0324 1362     		str	r3, [r2, #32]
 760 0326 734B     		ldr	r3, .L75
 761 0328 1B6A     		ldr	r3, [r3, #32]
 762 032a 724A     		ldr	r2, .L75
 763 032c 23F00403 		bic	r3, r3, #4
 764 0330 1362     		str	r3, [r2, #32]
 765 0332 1CE0     		b	.L51
 766              	.L52:
 767              		.loc 1 557 5 discriminator 4
 768 0334 7B68     		ldr	r3, [r7, #4]
 769 0336 DB68     		ldr	r3, [r3, #12]
 770 0338 052B     		cmp	r3, #5
 771 033a 0CD1     		bne	.L53
 772              		.loc 1 557 5 discriminator 5
 773 033c 6D4B     		ldr	r3, .L75
 774 033e 1B6A     		ldr	r3, [r3, #32]
 775 0340 6C4A     		ldr	r2, .L75
 776 0342 43F00403 		orr	r3, r3, #4
 777 0346 1362     		str	r3, [r2, #32]
 778 0348 6A4B     		ldr	r3, .L75
 779 034a 1B6A     		ldr	r3, [r3, #32]
 780 034c 694A     		ldr	r2, .L75
 781 034e 43F00103 		orr	r3, r3, #1
 782 0352 1362     		str	r3, [r2, #32]
 783 0354 0BE0     		b	.L51
 784              	.L53:
 785              		.loc 1 557 5 discriminator 6
 786 0356 674B     		ldr	r3, .L75
 787 0358 1B6A     		ldr	r3, [r3, #32]
 788 035a 664A     		ldr	r2, .L75
 789 035c 23F00103 		bic	r3, r3, #1
 790 0360 1362     		str	r3, [r2, #32]
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 25


 791 0362 644B     		ldr	r3, .L75
 792 0364 1B6A     		ldr	r3, [r3, #32]
 793 0366 634A     		ldr	r2, .L75
 794 0368 23F00403 		bic	r3, r3, #4
 795 036c 1362     		str	r3, [r2, #32]
 796              	.L51:
 558:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 559:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 797              		.loc 1 559 26 is_stmt 1
 798 036e 7B68     		ldr	r3, [r7, #4]
 799 0370 DB68     		ldr	r3, [r3, #12]
 800              		.loc 1 559 8
 801 0372 002B     		cmp	r3, #0
 802 0374 15D0     		beq	.L54
 560:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 561:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 562:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 803              		.loc 1 562 19
 804 0376 FFF7FEFF 		bl	HAL_GetTick
 805 037a 3861     		str	r0, [r7, #16]
 563:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 564:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is ready */
 565:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 806              		.loc 1 565 13
 807 037c 0AE0     		b	.L55
 808              	.L56:
 566:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 567:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 809              		.loc 1 567 14
 810 037e FFF7FEFF 		bl	HAL_GetTick
 811 0382 0246     		mov	r2, r0
 812              		.loc 1 567 28
 813 0384 3B69     		ldr	r3, [r7, #16]
 814 0386 D31A     		subs	r3, r2, r3
 815              		.loc 1 567 12
 816 0388 41F28832 		movw	r2, #5000
 817 038c 9342     		cmp	r3, r2
 818 038e 01D9     		bls	.L55
 568:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 569:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 819              		.loc 1 569 18
 820 0390 0323     		movs	r3, #3
 821 0392 ABE0     		b	.L16
 822              	.L55:
 565:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 823              		.loc 1 565 14
 824 0394 574B     		ldr	r3, .L75
 825 0396 1B6A     		ldr	r3, [r3, #32]
 826 0398 03F00203 		and	r3, r3, #2
 565:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 827              		.loc 1 565 13
 828 039c 002B     		cmp	r3, #0
 829 039e EED0     		beq	.L56
 830 03a0 14E0     		b	.L57
 831              	.L54:
 570:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 571:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 26


 572:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 573:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 574:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 575:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 576:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 832              		.loc 1 576 19
 833 03a2 FFF7FEFF 		bl	HAL_GetTick
 834 03a6 3861     		str	r0, [r7, #16]
 577:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 578:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 579:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 835              		.loc 1 579 13
 836 03a8 0AE0     		b	.L58
 837              	.L59:
 580:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 581:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 838              		.loc 1 581 14
 839 03aa FFF7FEFF 		bl	HAL_GetTick
 840 03ae 0246     		mov	r2, r0
 841              		.loc 1 581 28
 842 03b0 3B69     		ldr	r3, [r7, #16]
 843 03b2 D31A     		subs	r3, r2, r3
 844              		.loc 1 581 12
 845 03b4 41F28832 		movw	r2, #5000
 846 03b8 9342     		cmp	r3, r2
 847 03ba 01D9     		bls	.L58
 582:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 583:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 848              		.loc 1 583 18
 849 03bc 0323     		movs	r3, #3
 850 03be 95E0     		b	.L16
 851              	.L58:
 579:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 852              		.loc 1 579 14
 853 03c0 4C4B     		ldr	r3, .L75
 854 03c2 1B6A     		ldr	r3, [r3, #32]
 855 03c4 03F00203 		and	r3, r3, #2
 579:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 856              		.loc 1 579 13
 857 03c8 002B     		cmp	r3, #0
 858 03ca EED1     		bne	.L59
 859              	.L57:
 584:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 585:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 586:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 587:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 588:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 589:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (pwrclkchanged == SET)
 860              		.loc 1 589 8
 861 03cc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 862 03ce 012B     		cmp	r3, #1
 863 03d0 05D1     		bne	.L45
 590:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 591:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 864              		.loc 1 591 7
 865 03d2 484B     		ldr	r3, .L75
 866 03d4 DB69     		ldr	r3, [r3, #28]
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 27


 867 03d6 474A     		ldr	r2, .L75
 868 03d8 23F08053 		bic	r3, r3, #268435456
 869 03dc D361     		str	r3, [r2, #28]
 870              	.L45:
 871              	.LBE2:
 592:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 593:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 594:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 595:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
 596:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL2 Configuration -----------------------*/
 597:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 598:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL2(RCC_OscInitStruct->PLL2.PLL2State));
 599:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL2.PLL2State) != RCC_PLL2_NONE)
 600:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 601:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* This bit can not be cleared if the PLL2 clock is used indirectly as system
 602:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       clock (i.e. it is used as PLL clock entry that is used as system clock). */
 603:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if ((__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE) && \
 604:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && \
 605:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         ((READ_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC)) == RCC_CFGR2_PREDIV1SRC_PLL2))
 606:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 607:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 608:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 609:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 610:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 611:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((RCC_OscInitStruct->PLL2.PLL2State) == RCC_PLL2_ON)
 612:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 613:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 614:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL2_MUL(RCC_OscInitStruct->PLL2.PLL2MUL));
 615:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_HSE_PREDIV2(RCC_OscInitStruct->PLL2.HSEPrediv2Value));
 616:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 617:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Prediv2 can be written only when the PLLI2S is disabled. */
 618:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Return an error only if new value is different from the programmed value */
 619:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_PLL3ON) && \
 620:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             (__HAL_RCC_HSE_GET_PREDIV2() != RCC_OscInitStruct->PLL2.HSEPrediv2Value))
 621:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 622:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_ERROR;
 623:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 624:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 625:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 626:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 627:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 628:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 629:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 630:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 631:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */
 632:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != RESET)
 633:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 634:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 635:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 636:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 637:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 638:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 639:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 640:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv2 factor --------------------------------*/
 641:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSE_PREDIV2_CONFIG(RCC_OscInitStruct->PLL2.HSEPrediv2Value);
 642:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 643:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL2 multiplication factors. */
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 28


 644:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_CONFIG(RCC_OscInitStruct->PLL2.PLL2MUL);
 645:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 646:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL2. */
 647:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_ENABLE();
 648:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 649:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 650:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 651:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 652:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is ready */
 653:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  == RESET)
 654:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 655:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 656:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 657:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 658:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 659:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 660:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 661:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 662:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 663:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Set PREDIV1 source to HSE */
 664:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         CLEAR_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC);
 665:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 666:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 667:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 668:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 669:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 670:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 671:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 672:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */
 673:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  != RESET)
 674:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 675:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL2_TIMEOUT_VALUE)
 676:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 677:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 678:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 679:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 680:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 681:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 682:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 683:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 684:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
 685:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 686:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 687:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 688:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 872              		.loc 1 688 30
 873 03de 7B68     		ldr	r3, [r7, #4]
 874 03e0 DB69     		ldr	r3, [r3, #28]
 875              		.loc 1 688 6
 876 03e2 002B     		cmp	r3, #0
 877 03e4 00F08180 		beq	.L60
 689:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 690:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 691:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 878              		.loc 1 691 9
 879 03e8 424B     		ldr	r3, .L75
 880 03ea 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 29


 881 03ec 03F00C03 		and	r3, r3, #12
 882              		.loc 1 691 8
 883 03f0 082B     		cmp	r3, #8
 884 03f2 61D0     		beq	.L61
 692:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 693:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 885              		.loc 1 693 34
 886 03f4 7B68     		ldr	r3, [r7, #4]
 887 03f6 DB69     		ldr	r3, [r3, #28]
 888              		.loc 1 693 10
 889 03f8 022B     		cmp	r3, #2
 890 03fa 46D1     		bne	.L62
 694:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 695:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 696:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 697:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 698:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 699:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 700:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 891              		.loc 1 700 9
 892 03fc 3F4B     		ldr	r3, .L75+8
 893 03fe 0022     		movs	r2, #0
 894 0400 1A60     		str	r2, [r3]
 701:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 702:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 703:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 895              		.loc 1 703 21
 896 0402 FFF7FEFF 		bl	HAL_GetTick
 897 0406 3861     		str	r0, [r7, #16]
 704:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 705:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 706:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 898              		.loc 1 706 15
 899 0408 08E0     		b	.L63
 900              	.L64:
 707:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 708:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 901              		.loc 1 708 16
 902 040a FFF7FEFF 		bl	HAL_GetTick
 903 040e 0246     		mov	r2, r0
 904              		.loc 1 708 30
 905 0410 3B69     		ldr	r3, [r7, #16]
 906 0412 D31A     		subs	r3, r2, r3
 907              		.loc 1 708 14
 908 0414 022B     		cmp	r3, #2
 909 0416 01D9     		bls	.L63
 709:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 710:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 910              		.loc 1 710 20
 911 0418 0323     		movs	r3, #3
 912 041a 67E0     		b	.L16
 913              	.L63:
 706:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 914              		.loc 1 706 16
 915 041c 354B     		ldr	r3, .L75
 916 041e 1B68     		ldr	r3, [r3]
 917 0420 03F00073 		and	r3, r3, #33554432
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 30


 706:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 918              		.loc 1 706 15
 919 0424 002B     		cmp	r3, #0
 920 0426 F0D1     		bne	.L64
 711:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 712:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 713:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 714:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv factor --------------------------------*/
 715:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* It can be written only when the PLL is disabled. Not used in PLL source is different tha
 716:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 921              		.loc 1 716 35
 922 0428 7B68     		ldr	r3, [r7, #4]
 923 042a 1B6A     		ldr	r3, [r3, #32]
 924              		.loc 1 716 12
 925 042c B3F5803F 		cmp	r3, #65536
 926 0430 08D1     		bne	.L65
 717:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 718:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Check the parameter */
 719:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_HSE_PREDIV(RCC_OscInitStruct->HSEPredivValue));
 720:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 721:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_PREDIV1_SOURCE(RCC_OscInitStruct->Prediv1Source));
 722:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 723:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 source */
 724:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
 725:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
 726:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 727:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 Value */
 728:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 927              		.loc 1 728 11
 928 0432 304B     		ldr	r3, .L75
 929 0434 5B68     		ldr	r3, [r3, #4]
 930 0436 23F40032 		bic	r2, r3, #131072
 931 043a 7B68     		ldr	r3, [r7, #4]
 932 043c 9B68     		ldr	r3, [r3, #8]
 933 043e 2D49     		ldr	r1, .L75
 934 0440 1343     		orrs	r3, r3, r2
 935 0442 4B60     		str	r3, [r1, #4]
 936              	.L65:
 729:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 730:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 731:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL clock source and multiplication factors. */
 732:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 937              		.loc 1 732 9
 938 0444 2B4B     		ldr	r3, .L75
 939 0446 5B68     		ldr	r3, [r3, #4]
 940 0448 23F47412 		bic	r2, r3, #3997696
 941 044c 7B68     		ldr	r3, [r7, #4]
 942 044e 196A     		ldr	r1, [r3, #32]
 943 0450 7B68     		ldr	r3, [r7, #4]
 944 0452 5B6A     		ldr	r3, [r3, #36]
 945 0454 0B43     		orrs	r3, r3, r1
 946 0456 2749     		ldr	r1, .L75
 947 0458 1343     		orrs	r3, r3, r2
 948 045a 4B60     		str	r3, [r1, #4]
 733:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 734:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL. */
 735:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 31


 949              		.loc 1 735 9
 950 045c 274B     		ldr	r3, .L75+8
 951 045e 0122     		movs	r2, #1
 952 0460 1A60     		str	r2, [r3]
 736:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 737:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 738:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 953              		.loc 1 738 21
 954 0462 FFF7FEFF 		bl	HAL_GetTick
 955 0466 3861     		str	r0, [r7, #16]
 739:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 740:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is ready */
 741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 956              		.loc 1 741 15
 957 0468 08E0     		b	.L66
 958              	.L67:
 742:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 743:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 959              		.loc 1 743 16
 960 046a FFF7FEFF 		bl	HAL_GetTick
 961 046e 0246     		mov	r2, r0
 962              		.loc 1 743 30
 963 0470 3B69     		ldr	r3, [r7, #16]
 964 0472 D31A     		subs	r3, r2, r3
 965              		.loc 1 743 14
 966 0474 022B     		cmp	r3, #2
 967 0476 01D9     		bls	.L66
 744:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 745:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 968              		.loc 1 745 20
 969 0478 0323     		movs	r3, #3
 970 047a 37E0     		b	.L16
 971              	.L66:
 741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 972              		.loc 1 741 16
 973 047c 1D4B     		ldr	r3, .L75
 974 047e 1B68     		ldr	r3, [r3]
 975 0480 03F00073 		and	r3, r3, #33554432
 741:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 976              		.loc 1 741 15
 977 0484 002B     		cmp	r3, #0
 978 0486 F0D0     		beq	.L67
 979 0488 2FE0     		b	.L60
 980              	.L62:
 746:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 747:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 748:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 749:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 750:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 751:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 752:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 981              		.loc 1 752 9
 982 048a 1C4B     		ldr	r3, .L75+8
 983 048c 0022     		movs	r2, #0
 984 048e 1A60     		str	r2, [r3]
 753:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 754:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 32


 755:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 985              		.loc 1 755 21
 986 0490 FFF7FEFF 		bl	HAL_GetTick
 987 0494 3861     		str	r0, [r7, #16]
 756:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 757:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 988              		.loc 1 758 15
 989 0496 08E0     		b	.L68
 990              	.L69:
 759:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 760:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 991              		.loc 1 760 16
 992 0498 FFF7FEFF 		bl	HAL_GetTick
 993 049c 0246     		mov	r2, r0
 994              		.loc 1 760 30
 995 049e 3B69     		ldr	r3, [r7, #16]
 996 04a0 D31A     		subs	r3, r2, r3
 997              		.loc 1 760 14
 998 04a2 022B     		cmp	r3, #2
 999 04a4 01D9     		bls	.L68
 761:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 762:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1000              		.loc 1 762 20
 1001 04a6 0323     		movs	r3, #3
 1002 04a8 20E0     		b	.L16
 1003              	.L68:
 758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1004              		.loc 1 758 16
 1005 04aa 124B     		ldr	r3, .L75
 1006 04ac 1B68     		ldr	r3, [r3]
 1007 04ae 03F00073 		and	r3, r3, #33554432
 758:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1008              		.loc 1 758 15
 1009 04b2 002B     		cmp	r3, #0
 1010 04b4 F0D1     		bne	.L69
 1011 04b6 18E0     		b	.L60
 1012              	.L61:
 763:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 764:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 765:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 766:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 767:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 768:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 769:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 770:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 1013              		.loc 1 770 34
 1014 04b8 7B68     		ldr	r3, [r7, #4]
 1015 04ba DB69     		ldr	r3, [r3, #28]
 1016              		.loc 1 770 10
 1017 04bc 012B     		cmp	r3, #1
 1018 04be 01D1     		bne	.L70
 771:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 772:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 1019              		.loc 1 772 16
 1020 04c0 0123     		movs	r3, #1
 1021 04c2 13E0     		b	.L16
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 33


 1022              	.L70:
 773:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 774:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 775:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 776:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Do not return HAL_ERROR if request repeats the current configuration */
 777:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pll_config = RCC->CFGR;
 1023              		.loc 1 777 25
 1024 04c4 0B4B     		ldr	r3, .L75
 1025              		.loc 1 777 20
 1026 04c6 5B68     		ldr	r3, [r3, #4]
 1027 04c8 FB60     		str	r3, [r7, #12]
 778:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1028              		.loc 1 778 14
 1029 04ca FB68     		ldr	r3, [r7, #12]
 1030 04cc 03F48032 		and	r2, r3, #65536
 1031              		.loc 1 778 77
 1032 04d0 7B68     		ldr	r3, [r7, #4]
 1033 04d2 1B6A     		ldr	r3, [r3, #32]
 1034              		.loc 1 778 12
 1035 04d4 9A42     		cmp	r2, r3
 1036 04d6 06D1     		bne	.L71
 779:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             (READ_BIT(pll_config, RCC_CFGR_PLLMULL) != RCC_OscInitStruct->PLL.PLLMUL))
 1037              		.loc 1 779 14 discriminator 1
 1038 04d8 FB68     		ldr	r3, [r7, #12]
 1039 04da 03F47012 		and	r2, r3, #3932160
 1040              		.loc 1 779 78 discriminator 1
 1041 04de 7B68     		ldr	r3, [r7, #4]
 1042 04e0 5B6A     		ldr	r3, [r3, #36]
 778:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if ((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1043              		.loc 1 778 89 discriminator 1
 1044 04e2 9A42     		cmp	r2, r3
 1045 04e4 01D0     		beq	.L60
 1046              	.L71:
 780:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 781:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_ERROR;
 1047              		.loc 1 781 18
 1048 04e6 0123     		movs	r3, #1
 1049 04e8 00E0     		b	.L16
 1050              	.L60:
 782:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 783:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 784:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 785:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 786:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 787:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 1051              		.loc 1 787 10
 1052 04ea 0023     		movs	r3, #0
 1053              	.L16:
 788:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1054              		.loc 1 788 1
 1055 04ec 1846     		mov	r0, r3
 1056 04ee 1837     		adds	r7, r7, #24
 1057              		.cfi_def_cfa_offset 8
 1058 04f0 BD46     		mov	sp, r7
 1059              		.cfi_def_cfa_register 13
 1060              		@ sp needed
 1061 04f2 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 34


 1062              	.L76:
 1063              		.align	2
 1064              	.L75:
 1065 04f4 00100240 		.word	1073876992
 1066 04f8 00700040 		.word	1073770496
 1067 04fc 60004242 		.word	1111621728
 1068              		.cfi_endproc
 1069              	.LFE66:
 1071              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1072              		.align	1
 1073              		.global	HAL_RCC_ClockConfig
 1074              		.syntax unified
 1075              		.thumb
 1076              		.thumb_func
 1077              		.fpu softvfp
 1079              	HAL_RCC_ClockConfig:
 1080              	.LFB67:
 789:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 790:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 791:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified
 792:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 793:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 794:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 795:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  FLatency FLASH Latency
 796:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 797:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 798:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 799:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 800:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 801:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 802:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 803:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 804:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 805:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 806:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked).
 807:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 808:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         occur when the clock source will be ready.
 809:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 810:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         currently used as system clock source.
 811:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 812:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 813:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 814:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1081              		.loc 1 814 1
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 16
 1084              		@ frame_needed = 1, uses_anonymous_args = 0
 1085 0000 80B5     		push	{r7, lr}
 1086              		.cfi_def_cfa_offset 8
 1087              		.cfi_offset 7, -8
 1088              		.cfi_offset 14, -4
 1089 0002 84B0     		sub	sp, sp, #16
 1090              		.cfi_def_cfa_offset 24
 1091 0004 00AF     		add	r7, sp, #0
 1092              		.cfi_def_cfa_register 7
 1093 0006 7860     		str	r0, [r7, #4]
 1094 0008 3960     		str	r1, [r7]
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 35


 815:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart;
 816:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 817:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check Null pointer */
 818:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (RCC_ClkInitStruct == NULL)
 1095              		.loc 1 818 6
 1096 000a 7B68     		ldr	r3, [r7, #4]
 1097 000c 002B     		cmp	r3, #0
 1098 000e 01D1     		bne	.L78
 819:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 820:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     return HAL_ERROR;
 1099              		.loc 1 820 12
 1100 0010 0123     		movs	r3, #1
 1101 0012 D0E0     		b	.L79
 1102              	.L78:
 821:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 822:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 823:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 824:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 825:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 826:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 827:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 828:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock
 829:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     (HCLK) of the device. */
 830:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 831:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 832:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 833:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (FLatency > __HAL_FLASH_GET_LATENCY())
 1103              		.loc 1 833 18
 1104 0014 6A4B     		ldr	r3, .L93
 1105 0016 1B68     		ldr	r3, [r3]
 1106 0018 03F00703 		and	r3, r3, #7
 1107              		.loc 1 833 6
 1108 001c 3A68     		ldr	r2, [r7]
 1109 001e 9A42     		cmp	r2, r3
 1110 0020 10D9     		bls	.L80
 834:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 835:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 836:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1111              		.loc 1 836 5
 1112 0022 674B     		ldr	r3, .L93
 1113 0024 1B68     		ldr	r3, [r3]
 1114 0026 23F00702 		bic	r2, r3, #7
 1115 002a 6549     		ldr	r1, .L93
 1116 002c 3B68     		ldr	r3, [r7]
 1117 002e 1343     		orrs	r3, r3, r2
 1118 0030 0B60     		str	r3, [r1]
 837:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 838:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 839:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 840:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
 1119              		.loc 1 840 9
 1120 0032 634B     		ldr	r3, .L93
 1121 0034 1B68     		ldr	r3, [r3]
 1122 0036 03F00703 		and	r3, r3, #7
 1123              		.loc 1 840 8
 1124 003a 3A68     		ldr	r2, [r7]
 1125 003c 9A42     		cmp	r2, r3
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 36


 1126 003e 01D0     		beq	.L80
 841:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 842:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     return HAL_ERROR;
 1127              		.loc 1 842 12
 1128 0040 0123     		movs	r3, #1
 1129 0042 B8E0     		b	.L79
 1130              	.L80:
 843:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 844:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 845:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 846:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 847:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /*-------------------------- HCLK Configuration --------------------------*/
 848:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1131              		.loc 1 848 24
 1132 0044 7B68     		ldr	r3, [r7, #4]
 1133 0046 1B68     		ldr	r3, [r3]
 1134              		.loc 1 848 37
 1135 0048 03F00203 		and	r3, r3, #2
 1136              		.loc 1 848 4
 1137 004c 002B     		cmp	r3, #0
 1138 004e 20D0     		beq	.L81
 849:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 850:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Set the highest APBx dividers in order to ensure that we do not go through
 851:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     a non-spec phase whatever we decrease or increase HCLK. */
 852:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1139              		.loc 1 852 28
 1140 0050 7B68     		ldr	r3, [r7, #4]
 1141 0052 1B68     		ldr	r3, [r3]
 1142              		.loc 1 852 41
 1143 0054 03F00403 		and	r3, r3, #4
 1144              		.loc 1 852 8
 1145 0058 002B     		cmp	r3, #0
 1146 005a 05D0     		beq	.L82
 853:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 854:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 1147              		.loc 1 854 7
 1148 005c 594B     		ldr	r3, .L93+4
 1149 005e 5B68     		ldr	r3, [r3, #4]
 1150 0060 584A     		ldr	r2, .L93+4
 1151 0062 43F4E063 		orr	r3, r3, #1792
 1152 0066 5360     		str	r3, [r2, #4]
 1153              	.L82:
 855:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 856:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 857:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1154              		.loc 1 857 28
 1155 0068 7B68     		ldr	r3, [r7, #4]
 1156 006a 1B68     		ldr	r3, [r3]
 1157              		.loc 1 857 41
 1158 006c 03F00803 		and	r3, r3, #8
 1159              		.loc 1 857 8
 1160 0070 002B     		cmp	r3, #0
 1161 0072 05D0     		beq	.L83
 858:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 859:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 1162              		.loc 1 859 7
 1163 0074 534B     		ldr	r3, .L93+4
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 37


 1164 0076 5B68     		ldr	r3, [r3, #4]
 1165 0078 524A     		ldr	r2, .L93+4
 1166 007a 43F46053 		orr	r3, r3, #14336
 1167 007e 5360     		str	r3, [r2, #4]
 1168              	.L83:
 860:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 861:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 862:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 863:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 864:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1169              		.loc 1 864 5
 1170 0080 504B     		ldr	r3, .L93+4
 1171 0082 5B68     		ldr	r3, [r3, #4]
 1172 0084 23F0F002 		bic	r2, r3, #240
 1173 0088 7B68     		ldr	r3, [r7, #4]
 1174 008a 9B68     		ldr	r3, [r3, #8]
 1175 008c 4D49     		ldr	r1, .L93+4
 1176 008e 1343     		orrs	r3, r3, r2
 1177 0090 4B60     		str	r3, [r1, #4]
 1178              	.L81:
 865:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 866:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 867:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 868:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1179              		.loc 1 868 26
 1180 0092 7B68     		ldr	r3, [r7, #4]
 1181 0094 1B68     		ldr	r3, [r3]
 1182              		.loc 1 868 39
 1183 0096 03F00103 		and	r3, r3, #1
 1184              		.loc 1 868 6
 1185 009a 002B     		cmp	r3, #0
 1186 009c 40D0     		beq	.L84
 869:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 870:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 871:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 872:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 873:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1187              		.loc 1 873 26
 1188 009e 7B68     		ldr	r3, [r7, #4]
 1189 00a0 5B68     		ldr	r3, [r3, #4]
 1190              		.loc 1 873 8
 1191 00a2 012B     		cmp	r3, #1
 1192 00a4 07D1     		bne	.L85
 874:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 875:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSE ready flag */
 876:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1193              		.loc 1 876 11
 1194 00a6 474B     		ldr	r3, .L93+4
 1195 00a8 1B68     		ldr	r3, [r3]
 1196 00aa 03F40033 		and	r3, r3, #131072
 1197              		.loc 1 876 10
 1198 00ae 002B     		cmp	r3, #0
 1199 00b0 15D1     		bne	.L86
 877:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 878:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 1200              		.loc 1 878 16
 1201 00b2 0123     		movs	r3, #1
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 38


 1202 00b4 7FE0     		b	.L79
 1203              	.L85:
 879:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 880:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 881:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 882:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1204              		.loc 1 882 31
 1205 00b6 7B68     		ldr	r3, [r7, #4]
 1206 00b8 5B68     		ldr	r3, [r3, #4]
 1207              		.loc 1 882 13
 1208 00ba 022B     		cmp	r3, #2
 1209 00bc 07D1     		bne	.L87
 883:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 884:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the PLL ready flag */
 885:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1210              		.loc 1 885 11
 1211 00be 414B     		ldr	r3, .L93+4
 1212 00c0 1B68     		ldr	r3, [r3]
 1213 00c2 03F00073 		and	r3, r3, #33554432
 1214              		.loc 1 885 10
 1215 00c6 002B     		cmp	r3, #0
 1216 00c8 09D1     		bne	.L86
 886:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 887:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 1217              		.loc 1 887 16
 1218 00ca 0123     		movs	r3, #1
 1219 00cc 73E0     		b	.L79
 1220              	.L87:
 888:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 889:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 890:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 891:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 892:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 893:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI ready flag */
 894:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1221              		.loc 1 894 11
 1222 00ce 3D4B     		ldr	r3, .L93+4
 1223 00d0 1B68     		ldr	r3, [r3]
 1224 00d2 03F00203 		and	r3, r3, #2
 1225              		.loc 1 894 10
 1226 00d6 002B     		cmp	r3, #0
 1227 00d8 01D1     		bne	.L86
 895:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 896:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 1228              		.loc 1 896 16
 1229 00da 0123     		movs	r3, #1
 1230 00dc 6BE0     		b	.L79
 1231              	.L86:
 897:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 898:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 899:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1232              		.loc 1 899 5
 1233 00de 394B     		ldr	r3, .L93+4
 1234 00e0 5B68     		ldr	r3, [r3, #4]
 1235 00e2 23F00302 		bic	r2, r3, #3
 1236 00e6 7B68     		ldr	r3, [r7, #4]
 1237 00e8 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 39


 1238 00ea 3649     		ldr	r1, .L93+4
 1239 00ec 1343     		orrs	r3, r3, r2
 1240 00ee 4B60     		str	r3, [r1, #4]
 900:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 901:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Get Start Tick */
 902:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1241              		.loc 1 902 17
 1242 00f0 FFF7FEFF 		bl	HAL_GetTick
 1243 00f4 F860     		str	r0, [r7, #12]
 903:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 904:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1244              		.loc 1 904 11
 1245 00f6 0AE0     		b	.L88
 1246              	.L89:
 905:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 906:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1247              		.loc 1 906 12
 1248 00f8 FFF7FEFF 		bl	HAL_GetTick
 1249 00fc 0246     		mov	r2, r0
 1250              		.loc 1 906 26
 1251 00fe FB68     		ldr	r3, [r7, #12]
 1252 0100 D31A     		subs	r3, r2, r3
 1253              		.loc 1 906 10
 1254 0102 41F28832 		movw	r2, #5000
 1255 0106 9342     		cmp	r3, r2
 1256 0108 01D9     		bls	.L88
 907:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 908:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1257              		.loc 1 908 16
 1258 010a 0323     		movs	r3, #3
 1259 010c 53E0     		b	.L79
 1260              	.L88:
 904:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1261              		.loc 1 904 12
 1262 010e 2D4B     		ldr	r3, .L93+4
 1263 0110 5B68     		ldr	r3, [r3, #4]
 1264 0112 03F00C02 		and	r2, r3, #12
 904:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1265              		.loc 1 904 63
 1266 0116 7B68     		ldr	r3, [r7, #4]
 1267 0118 5B68     		ldr	r3, [r3, #4]
 904:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1268              		.loc 1 904 78
 1269 011a 9B00     		lsls	r3, r3, #2
 904:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1270              		.loc 1 904 11
 1271 011c 9A42     		cmp	r2, r3
 1272 011e EBD1     		bne	.L89
 1273              	.L84:
 909:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 910:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 911:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 912:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 913:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 914:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 915:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (FLatency < __HAL_FLASH_GET_LATENCY())
 1274              		.loc 1 915 18
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 40


 1275 0120 274B     		ldr	r3, .L93
 1276 0122 1B68     		ldr	r3, [r3]
 1277 0124 03F00703 		and	r3, r3, #7
 1278              		.loc 1 915 6
 1279 0128 3A68     		ldr	r2, [r7]
 1280 012a 9A42     		cmp	r2, r3
 1281 012c 10D2     		bcs	.L90
 916:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 917:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 918:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1282              		.loc 1 918 5
 1283 012e 244B     		ldr	r3, .L93
 1284 0130 1B68     		ldr	r3, [r3]
 1285 0132 23F00702 		bic	r2, r3, #7
 1286 0136 2249     		ldr	r1, .L93
 1287 0138 3B68     		ldr	r3, [r7]
 1288 013a 1343     		orrs	r3, r3, r2
 1289 013c 0B60     		str	r3, [r1]
 919:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 920:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 921:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 922:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
 1290              		.loc 1 922 9
 1291 013e 204B     		ldr	r3, .L93
 1292 0140 1B68     		ldr	r3, [r3]
 1293 0142 03F00703 		and	r3, r3, #7
 1294              		.loc 1 922 8
 1295 0146 3A68     		ldr	r2, [r7]
 1296 0148 9A42     		cmp	r2, r3
 1297 014a 01D0     		beq	.L90
 923:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 924:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     return HAL_ERROR;
 1298              		.loc 1 924 12
 1299 014c 0123     		movs	r3, #1
 1300 014e 32E0     		b	.L79
 1301              	.L90:
 925:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 926:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 927:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 928:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 929:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /*-------------------------- PCLK1 Configuration ---------------------------*/
 930:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1302              		.loc 1 930 24
 1303 0150 7B68     		ldr	r3, [r7, #4]
 1304 0152 1B68     		ldr	r3, [r3]
 1305              		.loc 1 930 37
 1306 0154 03F00403 		and	r3, r3, #4
 1307              		.loc 1 930 4
 1308 0158 002B     		cmp	r3, #0
 1309 015a 08D0     		beq	.L91
 931:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 932:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 933:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1310              		.loc 1 933 5
 1311 015c 194B     		ldr	r3, .L93+4
 1312 015e 5B68     		ldr	r3, [r3, #4]
 1313 0160 23F4E062 		bic	r2, r3, #1792
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 41


 1314 0164 7B68     		ldr	r3, [r7, #4]
 1315 0166 DB68     		ldr	r3, [r3, #12]
 1316 0168 1649     		ldr	r1, .L93+4
 1317 016a 1343     		orrs	r3, r3, r2
 1318 016c 4B60     		str	r3, [r1, #4]
 1319              	.L91:
 934:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 935:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 936:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 937:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1320              		.loc 1 937 26
 1321 016e 7B68     		ldr	r3, [r7, #4]
 1322 0170 1B68     		ldr	r3, [r3]
 1323              		.loc 1 937 39
 1324 0172 03F00803 		and	r3, r3, #8
 1325              		.loc 1 937 6
 1326 0176 002B     		cmp	r3, #0
 1327 0178 09D0     		beq	.L92
 938:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 939:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 940:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 1328              		.loc 1 940 5
 1329 017a 124B     		ldr	r3, .L93+4
 1330 017c 5B68     		ldr	r3, [r3, #4]
 1331 017e 23F46052 		bic	r2, r3, #14336
 1332 0182 7B68     		ldr	r3, [r7, #4]
 1333 0184 1B69     		ldr	r3, [r3, #16]
 1334 0186 DB00     		lsls	r3, r3, #3
 1335 0188 0E49     		ldr	r1, .L93+4
 1336 018a 1343     		orrs	r3, r3, r2
 1337 018c 4B60     		str	r3, [r1, #4]
 1338              	.L92:
 941:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 942:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 943:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 944:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_C
 1339              		.loc 1 944 21
 1340 018e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1341 0192 0246     		mov	r2, r0
 1342              		.loc 1 944 68
 1343 0194 0B4B     		ldr	r3, .L93+4
 1344 0196 5B68     		ldr	r3, [r3, #4]
 1345              		.loc 1 944 92
 1346 0198 1B09     		lsrs	r3, r3, #4
 1347 019a 03F00F03 		and	r3, r3, #15
 1348              		.loc 1 944 63
 1349 019e 0A49     		ldr	r1, .L93+8
 1350 01a0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1351              		.loc 1 944 47
 1352 01a2 22FA03F3 		lsr	r3, r2, r3
 1353              		.loc 1 944 19
 1354 01a6 094A     		ldr	r2, .L93+12
 1355 01a8 1360     		str	r3, [r2]
 945:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 946:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 947:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_InitTick(uwTickPrio);
 1356              		.loc 1 947 3
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 42


 1357 01aa 094B     		ldr	r3, .L93+16
 1358 01ac 1B68     		ldr	r3, [r3]
 1359 01ae 1846     		mov	r0, r3
 1360 01b0 FFF7FEFF 		bl	HAL_InitTick
 948:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 949:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 1361              		.loc 1 949 10
 1362 01b4 0023     		movs	r3, #0
 1363              	.L79:
 950:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1364              		.loc 1 950 1
 1365 01b6 1846     		mov	r0, r3
 1366 01b8 1037     		adds	r7, r7, #16
 1367              		.cfi_def_cfa_offset 8
 1368 01ba BD46     		mov	sp, r7
 1369              		.cfi_def_cfa_register 13
 1370              		@ sp needed
 1371 01bc 80BD     		pop	{r7, pc}
 1372              	.L94:
 1373 01be 00BF     		.align	2
 1374              	.L93:
 1375 01c0 00200240 		.word	1073881088
 1376 01c4 00100240 		.word	1073876992
 1377 01c8 00000000 		.word	AHBPrescTable
 1378 01cc 00000000 		.word	SystemCoreClock
 1379 01d0 00000000 		.word	uwTickPrio
 1380              		.cfi_endproc
 1381              	.LFE67:
 1383              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1384              		.align	1
 1385              		.global	HAL_RCC_MCOConfig
 1386              		.syntax unified
 1387              		.thumb
 1388              		.thumb_func
 1389              		.fpu softvfp
 1391              	HAL_RCC_MCOConfig:
 1392              	.LFB68:
 951:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 952:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 953:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 954:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 955:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 956:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 957:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 958:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 959:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim
 960:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 961:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 962:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 963:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 964:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks
 965:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     frequencies.
 966:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 967:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 968:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 969:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 970:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 43


 971:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 972:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 973:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 974:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 975:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 976:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 977:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 978:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 979:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 980:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 981:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 982:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 983:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F105xC
 984:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 985:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 986:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 987:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE      XT1 external 3-25 MHz oscillator clock selecte
 988:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 989:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 990:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F107xC
 991:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 992:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 993:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 994:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE XT1  external 3-25 MHz oscillator clock selected as
 995:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 996:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 997:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 998:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 999:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
1000:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1001:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1002:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
1003:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1393              		.loc 1 1003 1
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 40
 1396              		@ frame_needed = 1, uses_anonymous_args = 0
 1397 0000 80B5     		push	{r7, lr}
 1398              		.cfi_def_cfa_offset 8
 1399              		.cfi_offset 7, -8
 1400              		.cfi_offset 14, -4
 1401 0002 8AB0     		sub	sp, sp, #40
 1402              		.cfi_def_cfa_offset 48
 1403 0004 00AF     		add	r7, sp, #0
 1404              		.cfi_def_cfa_register 7
 1405 0006 F860     		str	r0, [r7, #12]
 1406 0008 B960     		str	r1, [r7, #8]
 1407 000a 7A60     		str	r2, [r7, #4]
1004:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0U};
 1408              		.loc 1 1004 20
 1409 000c 07F11803 		add	r3, r7, #24
 1410 0010 0022     		movs	r2, #0
 1411 0012 1A60     		str	r2, [r3]
 1412 0014 5A60     		str	r2, [r3, #4]
 1413 0016 9A60     		str	r2, [r3, #8]
 1414 0018 DA60     		str	r2, [r3, #12]
1005:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 44


1006:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1007:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1008:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1009:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1010:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1011:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Prevent unused argument(s) compilation warning */
1012:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   UNUSED(RCC_MCOx);
1013:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   UNUSED(RCC_MCODiv);
1014:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1015:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
1016:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1415              		.loc 1 1016 18
 1416 001a 0223     		movs	r3, #2
 1417 001c FB61     		str	r3, [r7, #28]
1017:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1418              		.loc 1 1017 18
 1419 001e 0323     		movs	r3, #3
 1420 0020 7B62     		str	r3, [r7, #36]
1018:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 1421              		.loc 1 1018 18
 1422 0022 0023     		movs	r3, #0
 1423 0024 3B62     		str	r3, [r7, #32]
1019:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1424              		.loc 1 1019 18
 1425 0026 4FF48073 		mov	r3, #256
 1426 002a BB61     		str	r3, [r7, #24]
 1427              	.LBB4:
1020:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1021:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* MCO1 Clock Enable */
1022:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1428              		.loc 1 1022 3
 1429 002c 0E4B     		ldr	r3, .L96
 1430 002e 9B69     		ldr	r3, [r3, #24]
 1431 0030 0D4A     		ldr	r2, .L96
 1432 0032 43F00403 		orr	r3, r3, #4
 1433 0036 9361     		str	r3, [r2, #24]
 1434 0038 0B4B     		ldr	r3, .L96
 1435 003a 9B69     		ldr	r3, [r3, #24]
 1436 003c 03F00403 		and	r3, r3, #4
 1437 0040 7B61     		str	r3, [r7, #20]
 1438 0042 7B69     		ldr	r3, [r7, #20]
 1439              	.LBE4:
1023:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1024:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1440              		.loc 1 1024 3
 1441 0044 07F11803 		add	r3, r7, #24
 1442 0048 1946     		mov	r1, r3
 1443 004a 0848     		ldr	r0, .L96+4
 1444 004c FFF7FEFF 		bl	HAL_GPIO_Init
1025:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1026:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO clock source */
1027:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1445              		.loc 1 1027 3
 1446 0050 054B     		ldr	r3, .L96
 1447 0052 5B68     		ldr	r3, [r3, #4]
 1448 0054 23F0E062 		bic	r2, r3, #117440512
 1449 0058 0349     		ldr	r1, .L96
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 45


 1450 005a BB68     		ldr	r3, [r7, #8]
 1451 005c 1343     		orrs	r3, r3, r2
 1452 005e 4B60     		str	r3, [r1, #4]
1028:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1453              		.loc 1 1028 1
 1454 0060 00BF     		nop
 1455 0062 2837     		adds	r7, r7, #40
 1456              		.cfi_def_cfa_offset 8
 1457 0064 BD46     		mov	sp, r7
 1458              		.cfi_def_cfa_register 13
 1459              		@ sp needed
 1460 0066 80BD     		pop	{r7, pc}
 1461              	.L97:
 1462              		.align	2
 1463              	.L96:
 1464 0068 00100240 		.word	1073876992
 1465 006c 00080140 		.word	1073809408
 1466              		.cfi_endproc
 1467              	.LFE68:
 1469              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1470              		.align	1
 1471              		.global	HAL_RCC_EnableCSS
 1472              		.syntax unified
 1473              		.thumb
 1474              		.thumb_func
 1475              		.fpu softvfp
 1477              	HAL_RCC_EnableCSS:
 1478              	.LFB69:
1029:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1030:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1031:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
1032:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1033:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1034:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1035:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1036:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.
1037:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1038:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1039:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1040:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1479              		.loc 1 1040 1
 1480              		.cfi_startproc
 1481              		@ args = 0, pretend = 0, frame = 0
 1482              		@ frame_needed = 1, uses_anonymous_args = 0
 1483              		@ link register save eliminated.
 1484 0000 80B4     		push	{r7}
 1485              		.cfi_def_cfa_offset 4
 1486              		.cfi_offset 7, -4
 1487 0002 00AF     		add	r7, sp, #0
 1488              		.cfi_def_cfa_register 7
1041:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1489              		.loc 1 1041 3
 1490 0004 034B     		ldr	r3, .L99
 1491              		.loc 1 1041 38
 1492 0006 0122     		movs	r2, #1
 1493 0008 1A60     		str	r2, [r3]
1042:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 46


 1494              		.loc 1 1042 1
 1495 000a 00BF     		nop
 1496 000c BD46     		mov	sp, r7
 1497              		.cfi_def_cfa_register 13
 1498              		@ sp needed
 1499 000e 80BC     		pop	{r7}
 1500              		.cfi_restore 7
 1501              		.cfi_def_cfa_offset 0
 1502 0010 7047     		bx	lr
 1503              	.L100:
 1504 0012 00BF     		.align	2
 1505              	.L99:
 1506 0014 4C004242 		.word	1111621708
 1507              		.cfi_endproc
 1508              	.LFE69:
 1510              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1511              		.align	1
 1512              		.global	HAL_RCC_DisableCSS
 1513              		.syntax unified
 1514              		.thumb
 1515              		.thumb_func
 1516              		.fpu softvfp
 1518              	HAL_RCC_DisableCSS:
 1519              	.LFB70:
1043:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1044:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1045:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
1046:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1047:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1048:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
1049:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1520              		.loc 1 1049 1
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 1, uses_anonymous_args = 0
 1524              		@ link register save eliminated.
 1525 0000 80B4     		push	{r7}
 1526              		.cfi_def_cfa_offset 4
 1527              		.cfi_offset 7, -4
 1528 0002 00AF     		add	r7, sp, #0
 1529              		.cfi_def_cfa_register 7
1050:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1530              		.loc 1 1050 3
 1531 0004 034B     		ldr	r3, .L102
 1532              		.loc 1 1050 38
 1533 0006 0022     		movs	r2, #0
 1534 0008 1A60     		str	r2, [r3]
1051:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1535              		.loc 1 1051 1
 1536 000a 00BF     		nop
 1537 000c BD46     		mov	sp, r7
 1538              		.cfi_def_cfa_register 13
 1539              		@ sp needed
 1540 000e 80BC     		pop	{r7}
 1541              		.cfi_restore 7
 1542              		.cfi_def_cfa_offset 0
 1543 0010 7047     		bx	lr
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 47


 1544              	.L103:
 1545 0012 00BF     		.align	2
 1546              	.L102:
 1547 0014 4C004242 		.word	1111621708
 1548              		.cfi_endproc
 1549              	.LFE70:
 1551              		.section	.rodata
 1552              		.align	2
 1553              	.LC0:
 1554 0000 02030405 		.ascii	"\002\003\004\005\006\007\010\011\012\013\014\015\016"
 1554      06070809 
 1554      0A0B0C0D 
 1554      0E
 1555 000d 0F1010   		.ascii	"\017\020\020"
 1556              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1557              		.align	1
 1558              		.global	HAL_RCC_GetSysClockFreq
 1559              		.syntax unified
 1560              		.thumb
 1561              		.thumb_func
 1562              		.fpu softvfp
 1564              	HAL_RCC_GetSysClockFreq:
 1565              	.LFB71:
1052:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1053:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1054:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency
1055:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1056:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1057:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         constant and the selected clock source:
1058:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1059:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
1060:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
1061:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
1062:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
1063:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
1064:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
1065:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               in voltage and temperature.
1066:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
1067:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1068:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1069:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                have wrong result.
1070:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
1071:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1072:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         value for HSE crystal.
1073:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
1074:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1075:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
1076:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
1077:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1078:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1079:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
1080:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval SYSCLK frequency
1081:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1082:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1083:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1566              		.loc 1 1083 1
 1567              		.cfi_startproc
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 48


 1568              		@ args = 0, pretend = 0, frame = 40
 1569              		@ frame_needed = 1, uses_anonymous_args = 0
 1570              		@ link register save eliminated.
 1571 0000 90B4     		push	{r4, r7}
 1572              		.cfi_def_cfa_offset 8
 1573              		.cfi_offset 4, -8
 1574              		.cfi_offset 7, -4
 1575 0002 8AB0     		sub	sp, sp, #40
 1576              		.cfi_def_cfa_offset 48
 1577 0004 00AF     		add	r7, sp, #0
 1578              		.cfi_def_cfa_register 7
1084:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1085:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[14] = {0, 0, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 13};
1086:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
1087:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1088:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16};
 1579              		.loc 1 1088 17
 1580 0006 2A4B     		ldr	r3, .L113
 1581 0008 3C1D     		adds	r4, r7, #4
 1582 000a 0FCB     		ldm	r3, {r0, r1, r2, r3}
 1583 000c 84E80F00 		stm	r4, {r0, r1, r2, r3}
1089:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
1090:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
1091:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1092:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[2] = {1, 2};
 1584              		.loc 1 1092 17
 1585 0010 40F20123 		movw	r3, #513
 1586 0014 3B80     		strh	r3, [r7]	@ movhi
1093:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
1094:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1095:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
1096:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 1587              		.loc 1 1096 12
 1588 0016 0023     		movs	r3, #0
 1589 0018 FB61     		str	r3, [r7, #28]
 1590              		.loc 1 1096 25
 1591 001a 0023     		movs	r3, #0
 1592 001c BB61     		str	r3, [r7, #24]
 1593              		.loc 1 1096 38
 1594 001e 0023     		movs	r3, #0
 1595 0020 7B62     		str	r3, [r7, #36]
 1596              		.loc 1 1096 51
 1597 0022 0023     		movs	r3, #0
 1598 0024 7B61     		str	r3, [r7, #20]
1097:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 1599              		.loc 1 1097 12
 1600 0026 0023     		movs	r3, #0
 1601 0028 3B62     		str	r3, [r7, #32]
1098:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1099:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t prediv2 = 0U, pll2mul = 0U;
1100:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
1101:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1102:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1602              		.loc 1 1102 15
 1603 002a 224B     		ldr	r3, .L113+4
 1604              		.loc 1 1102 10
 1605 002c 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 49


 1606 002e FB61     		str	r3, [r7, #28]
1103:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1104:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1105:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1607              		.loc 1 1105 18
 1608 0030 FB69     		ldr	r3, [r7, #28]
 1609 0032 03F00C03 		and	r3, r3, #12
 1610              		.loc 1 1105 3
 1611 0036 042B     		cmp	r3, #4
 1612 0038 02D0     		beq	.L105
 1613 003a 082B     		cmp	r3, #8
 1614 003c 03D0     		beq	.L106
 1615 003e 2DE0     		b	.L112
 1616              	.L105:
1106:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1107:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1108:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1109:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1617              		.loc 1 1109 20
 1618 0040 1D4B     		ldr	r3, .L113+8
 1619 0042 3B62     		str	r3, [r7, #32]
1110:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 1620              		.loc 1 1110 7
 1621 0044 2DE0     		b	.L108
 1622              	.L106:
1111:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1112:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1113:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1114:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
 1623              		.loc 1 1114 73
 1624 0046 FB69     		ldr	r3, [r7, #28]
 1625 0048 9B0C     		lsrs	r3, r3, #18
 1626 004a 03F00F03 		and	r3, r3, #15
 1627              		.loc 1 1114 34
 1628 004e 07F12802 		add	r2, r7, #40
 1629 0052 1344     		add	r3, r3, r2
 1630 0054 13F8243C 		ldrb	r3, [r3, #-36]	@ zero_extendqisi2
 1631              		.loc 1 1114 14
 1632 0058 7B61     		str	r3, [r7, #20]
1115:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 1633              		.loc 1 1115 19
 1634 005a FB69     		ldr	r3, [r7, #28]
 1635 005c 03F48033 		and	r3, r3, #65536
 1636              		.loc 1 1115 10
 1637 0060 002B     		cmp	r3, #0
 1638 0062 13D0     		beq	.L109
1116:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
1117:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
1118:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1
1119:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1120:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_
 1639              		.loc 1 1120 51
 1640 0064 134B     		ldr	r3, .L113+4
 1641 0066 5B68     		ldr	r3, [r3, #4]
 1642              		.loc 1 1120 79
 1643 0068 5B0C     		lsrs	r3, r3, #17
 1644 006a 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 50


 1645              		.loc 1 1120 36
 1646 006e 07F12802 		add	r2, r7, #40
 1647 0072 1344     		add	r3, r3, r2
 1648 0074 13F8283C 		ldrb	r3, [r3, #-40]	@ zero_extendqisi2
 1649              		.loc 1 1120 16
 1650 0078 BB61     		str	r3, [r7, #24]
1121:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
1122:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1123:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1124:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (HAL_IS_BIT_SET(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC))
1125:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1126:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLL2 selected as Prediv1 source */
1127:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLLCLK = PLL2CLK / PREDIV1 * PLLMUL with PLL2CLK = HSE/PREDIV2 * PLL2MUL */
1128:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prediv2 = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> RCC_CFGR2_PREDIV2_Pos) + 1;
1129:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pll2mul = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> RCC_CFGR2_PLL2MUL_Pos) + 2;
1130:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)(((uint64_t)HSE_VALUE * (uint64_t)pll2mul * (uint64_t)pllmul) / ((uint
1131:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1132:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         else
1133:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1134:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1135:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((HSE_VALUE * pllmul) / prediv);
1136:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1137:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1138:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* If PLLMUL was set to 13 means that it was to cover the case PLLMUL 6.5 (avoid using floa
1139:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* In this case need to divide pllclk by 2 */
1140:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (pllmul == aPLLMULFactorTable[(uint32_t)(RCC_CFGR_PLLMULL6_5) >> RCC_CFGR_PLLMULL_Pos])
1141:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1142:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = pllclk / 2;
1143:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1144:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1145:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1146:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSE_VALUE  * pllmul) / prediv);
 1651              		.loc 1 1146 41
 1652 007a 7B69     		ldr	r3, [r7, #20]
 1653 007c 0E4A     		ldr	r2, .L113+8
 1654 007e 02FB03F2 		mul	r2, r2, r3
 1655              		.loc 1 1146 16
 1656 0082 BB69     		ldr	r3, [r7, #24]
 1657 0084 B2FBF3F3 		udiv	r3, r2, r3
 1658 0088 7B62     		str	r3, [r7, #36]
 1659 008a 04E0     		b	.L110
 1660              	.L109:
1147:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
1148:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1149:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
1150:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
1151:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1152:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 1661              		.loc 1 1152 16
 1662 008c 7B69     		ldr	r3, [r7, #20]
 1663 008e 0B4A     		ldr	r2, .L113+12
 1664 0090 02FB03F3 		mul	r3, r2, r3
 1665 0094 7B62     		str	r3, [r7, #36]
 1666              	.L110:
1153:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1154:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = pllclk;
 1667              		.loc 1 1154 20
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 51


 1668 0096 7B6A     		ldr	r3, [r7, #36]
 1669 0098 3B62     		str	r3, [r7, #32]
1155:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 1670              		.loc 1 1155 7
 1671 009a 02E0     		b	.L108
 1672              	.L112:
1156:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1157:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1158:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     default: /* HSI used as system clock */
1159:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1160:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 1673              		.loc 1 1160 20
 1674 009c 064B     		ldr	r3, .L113+8
 1675 009e 3B62     		str	r3, [r7, #32]
1161:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 1676              		.loc 1 1161 7
 1677 00a0 00BF     		nop
 1678              	.L108:
1162:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1163:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1164:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return sysclockfreq;
 1679              		.loc 1 1164 10
 1680 00a2 3B6A     		ldr	r3, [r7, #32]
1165:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1681              		.loc 1 1165 1
 1682 00a4 1846     		mov	r0, r3
 1683 00a6 2837     		adds	r7, r7, #40
 1684              		.cfi_def_cfa_offset 8
 1685 00a8 BD46     		mov	sp, r7
 1686              		.cfi_def_cfa_register 13
 1687              		@ sp needed
 1688 00aa 90BC     		pop	{r4, r7}
 1689              		.cfi_restore 7
 1690              		.cfi_restore 4
 1691              		.cfi_def_cfa_offset 0
 1692 00ac 7047     		bx	lr
 1693              	.L114:
 1694 00ae 00BF     		.align	2
 1695              	.L113:
 1696 00b0 00000000 		.word	.LC0
 1697 00b4 00100240 		.word	1073876992
 1698 00b8 00127A00 		.word	8000000
 1699 00bc 00093D00 		.word	4000000
 1700              		.cfi_endproc
 1701              	.LFE71:
 1703              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1704              		.align	1
 1705              		.global	HAL_RCC_GetHCLKFreq
 1706              		.syntax unified
 1707              		.thumb
 1708              		.thumb_func
 1709              		.fpu softvfp
 1711              	HAL_RCC_GetHCLKFreq:
 1712              	.LFB72:
1166:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1167:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1168:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 52


1169:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1170:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1171:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
1172:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
1173:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated within this function
1174:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HCLK frequency
1175:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1176:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1177:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1713              		.loc 1 1177 1
 1714              		.cfi_startproc
 1715              		@ args = 0, pretend = 0, frame = 0
 1716              		@ frame_needed = 1, uses_anonymous_args = 0
 1717              		@ link register save eliminated.
 1718 0000 80B4     		push	{r7}
 1719              		.cfi_def_cfa_offset 4
 1720              		.cfi_offset 7, -4
 1721 0002 00AF     		add	r7, sp, #0
 1722              		.cfi_def_cfa_register 7
1178:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return SystemCoreClock;
 1723              		.loc 1 1178 10
 1724 0004 024B     		ldr	r3, .L117
 1725 0006 1B68     		ldr	r3, [r3]
1179:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1726              		.loc 1 1179 1
 1727 0008 1846     		mov	r0, r3
 1728 000a BD46     		mov	sp, r7
 1729              		.cfi_def_cfa_register 13
 1730              		@ sp needed
 1731 000c 80BC     		pop	{r7}
 1732              		.cfi_restore 7
 1733              		.cfi_def_cfa_offset 0
 1734 000e 7047     		bx	lr
 1735              	.L118:
 1736              		.align	2
 1737              	.L117:
 1738 0010 00000000 		.word	SystemCoreClock
 1739              		.cfi_endproc
 1740              	.LFE72:
 1742              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1743              		.align	1
 1744              		.global	HAL_RCC_GetPCLK1Freq
 1745              		.syntax unified
 1746              		.thumb
 1747              		.thumb_func
 1748              		.fpu softvfp
 1750              	HAL_RCC_GetPCLK1Freq:
 1751              	.LFB73:
1180:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1181:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1182:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency
1183:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1184:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1185:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK1 frequency
1186:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1187:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1188:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 53


 1752              		.loc 1 1188 1
 1753              		.cfi_startproc
 1754              		@ args = 0, pretend = 0, frame = 0
 1755              		@ frame_needed = 1, uses_anonymous_args = 0
 1756 0000 80B5     		push	{r7, lr}
 1757              		.cfi_def_cfa_offset 8
 1758              		.cfi_offset 7, -8
 1759              		.cfi_offset 14, -4
 1760 0002 00AF     		add	r7, sp, #0
 1761              		.cfi_def_cfa_register 7
1189:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1190:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos
 1762              		.loc 1 1190 11
 1763 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1764 0008 0246     		mov	r2, r0
 1765              		.loc 1 1190 54
 1766 000a 054B     		ldr	r3, .L121
 1767 000c 5B68     		ldr	r3, [r3, #4]
 1768              		.loc 1 1190 79
 1769 000e 1B0A     		lsrs	r3, r3, #8
 1770 0010 03F00703 		and	r3, r3, #7
 1771              		.loc 1 1190 49
 1772 0014 0349     		ldr	r1, .L121+4
 1773 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1774              		.loc 1 1190 33
 1775 0018 22FA03F3 		lsr	r3, r2, r3
1191:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1776              		.loc 1 1191 1
 1777 001c 1846     		mov	r0, r3
 1778 001e 80BD     		pop	{r7, pc}
 1779              	.L122:
 1780              		.align	2
 1781              	.L121:
 1782 0020 00100240 		.word	1073876992
 1783 0024 00000000 		.word	APBPrescTable
 1784              		.cfi_endproc
 1785              	.LFE73:
 1787              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1788              		.align	1
 1789              		.global	HAL_RCC_GetPCLK2Freq
 1790              		.syntax unified
 1791              		.thumb
 1792              		.thumb_func
 1793              		.fpu softvfp
 1795              	HAL_RCC_GetPCLK2Freq:
 1796              	.LFB74:
1192:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1193:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1194:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency
1195:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1196:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1197:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK2 frequency
1198:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1199:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1200:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1797              		.loc 1 1200 1
 1798              		.cfi_startproc
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 54


 1799              		@ args = 0, pretend = 0, frame = 0
 1800              		@ frame_needed = 1, uses_anonymous_args = 0
 1801 0000 80B5     		push	{r7, lr}
 1802              		.cfi_def_cfa_offset 8
 1803              		.cfi_offset 7, -8
 1804              		.cfi_offset 14, -4
 1805 0002 00AF     		add	r7, sp, #0
 1806              		.cfi_def_cfa_register 7
1201:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1202:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos
 1807              		.loc 1 1202 11
 1808 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1809 0008 0246     		mov	r2, r0
 1810              		.loc 1 1202 54
 1811 000a 054B     		ldr	r3, .L125
 1812 000c 5B68     		ldr	r3, [r3, #4]
 1813              		.loc 1 1202 79
 1814 000e DB0A     		lsrs	r3, r3, #11
 1815 0010 03F00703 		and	r3, r3, #7
 1816              		.loc 1 1202 49
 1817 0014 0349     		ldr	r1, .L125+4
 1818 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1819              		.loc 1 1202 33
 1820 0018 22FA03F3 		lsr	r3, r2, r3
1203:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1821              		.loc 1 1203 1
 1822 001c 1846     		mov	r0, r3
 1823 001e 80BD     		pop	{r7, pc}
 1824              	.L126:
 1825              		.align	2
 1826              	.L125:
 1827 0020 00100240 		.word	1073876992
 1828 0024 00000000 		.word	APBPrescTable
 1829              		.cfi_endproc
 1830              	.LFE74:
 1832              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1833              		.align	1
 1834              		.global	HAL_RCC_GetOscConfig
 1835              		.syntax unified
 1836              		.thumb
 1837              		.thumb_func
 1838              		.fpu softvfp
 1840              	HAL_RCC_GetOscConfig:
 1841              	.LFB75:
1204:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1205:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1206:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal
1207:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1208:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
1209:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * will be configured.
1210:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1211:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1212:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1213:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1842              		.loc 1 1213 1
 1843              		.cfi_startproc
 1844              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 55


 1845              		@ frame_needed = 1, uses_anonymous_args = 0
 1846              		@ link register save eliminated.
 1847 0000 80B4     		push	{r7}
 1848              		.cfi_def_cfa_offset 4
 1849              		.cfi_offset 7, -4
 1850 0002 83B0     		sub	sp, sp, #12
 1851              		.cfi_def_cfa_offset 16
 1852 0004 00AF     		add	r7, sp, #0
 1853              		.cfi_def_cfa_register 7
 1854 0006 7860     		str	r0, [r7, #4]
1214:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1215:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1216:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1217:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1218:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 1855              		.loc 1 1218 37
 1856 0008 7B68     		ldr	r3, [r7, #4]
 1857 000a 0F22     		movs	r2, #15
 1858 000c 1A60     		str	r2, [r3]
1219:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                                       | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1220:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1221:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1222:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Prediv1 source --------------------------------------------------*/
1223:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->Prediv1Source = READ_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC);
1224:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
1225:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1226:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1227:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 1859              		.loc 1 1227 11
 1860 000e 3C4B     		ldr	r3, .L140
 1861 0010 1B68     		ldr	r3, [r3]
 1862              		.loc 1 1227 16
 1863 0012 03F48023 		and	r3, r3, #262144
 1864              		.loc 1 1227 6
 1865 0016 B3F5802F 		cmp	r3, #262144
 1866 001a 04D1     		bne	.L128
1228:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1229:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 1867              		.loc 1 1229 33
 1868 001c 7B68     		ldr	r3, [r7, #4]
 1869 001e 4FF4A022 		mov	r2, #327680
 1870 0022 5A60     		str	r2, [r3, #4]
 1871 0024 0EE0     		b	.L129
 1872              	.L128:
1230:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1231:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if ((RCC->CR & RCC_CR_HSEON) == RCC_CR_HSEON)
 1873              		.loc 1 1231 16
 1874 0026 364B     		ldr	r3, .L140
 1875 0028 1B68     		ldr	r3, [r3]
 1876              		.loc 1 1231 21
 1877 002a 03F48033 		and	r3, r3, #65536
 1878              		.loc 1 1231 11
 1879 002e B3F5803F 		cmp	r3, #65536
 1880 0032 04D1     		bne	.L130
1232:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1233:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 1881              		.loc 1 1233 33
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 56


 1882 0034 7B68     		ldr	r3, [r7, #4]
 1883 0036 4FF48032 		mov	r2, #65536
 1884 003a 5A60     		str	r2, [r3, #4]
 1885 003c 02E0     		b	.L129
 1886              	.L130:
1234:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1235:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1236:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1237:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 1887              		.loc 1 1237 33
 1888 003e 7B68     		ldr	r3, [r7, #4]
 1889 0040 0022     		movs	r2, #0
 1890 0042 5A60     		str	r2, [r3, #4]
 1891              	.L129:
1238:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1239:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
 1892              		.loc 1 1239 39
 1893 0044 2E4B     		ldr	r3, .L140
 1894 0046 5B68     		ldr	r3, [r3, #4]
 1895 0048 03F40032 		and	r2, r3, #131072
 1896              		.loc 1 1239 37
 1897 004c 7B68     		ldr	r3, [r7, #4]
 1898 004e 9A60     		str	r2, [r3, #8]
1240:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1241:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1242:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_HSION) == RCC_CR_HSION)
 1899              		.loc 1 1242 11
 1900 0050 2B4B     		ldr	r3, .L140
 1901 0052 1B68     		ldr	r3, [r3]
 1902              		.loc 1 1242 16
 1903 0054 03F00103 		and	r3, r3, #1
 1904              		.loc 1 1242 6
 1905 0058 012B     		cmp	r3, #1
 1906 005a 03D1     		bne	.L131
1243:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1244:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 1907              		.loc 1 1244 33
 1908 005c 7B68     		ldr	r3, [r7, #4]
 1909 005e 0122     		movs	r2, #1
 1910 0060 1A61     		str	r2, [r3, #16]
 1911 0062 02E0     		b	.L132
 1912              	.L131:
1245:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1246:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1247:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1248:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 1913              		.loc 1 1248 33
 1914 0064 7B68     		ldr	r3, [r7, #4]
 1915 0066 0022     		movs	r2, #0
 1916 0068 1A61     		str	r2, [r3, #16]
 1917              	.L132:
1249:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1250:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1251:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_
 1918              		.loc 1 1251 59
 1919 006a 254B     		ldr	r3, .L140
 1920 006c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 57


 1921              		.loc 1 1251 44
 1922 006e DB08     		lsrs	r3, r3, #3
 1923 0070 03F01F02 		and	r2, r3, #31
 1924              		.loc 1 1251 42
 1925 0074 7B68     		ldr	r3, [r7, #4]
 1926 0076 5A61     		str	r2, [r3, #20]
1252:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1253:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1254:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->BDCR & RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 1927              		.loc 1 1254 11
 1928 0078 214B     		ldr	r3, .L140
 1929 007a 1B6A     		ldr	r3, [r3, #32]
 1930              		.loc 1 1254 18
 1931 007c 03F00403 		and	r3, r3, #4
 1932              		.loc 1 1254 6
 1933 0080 042B     		cmp	r3, #4
 1934 0082 03D1     		bne	.L133
1255:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1256:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 1935              		.loc 1 1256 33
 1936 0084 7B68     		ldr	r3, [r7, #4]
 1937 0086 0522     		movs	r2, #5
 1938 0088 DA60     		str	r2, [r3, #12]
 1939 008a 0CE0     		b	.L134
 1940              	.L133:
1257:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1258:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if ((RCC->BDCR & RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 1941              		.loc 1 1258 16
 1942 008c 1C4B     		ldr	r3, .L140
 1943 008e 1B6A     		ldr	r3, [r3, #32]
 1944              		.loc 1 1258 23
 1945 0090 03F00103 		and	r3, r3, #1
 1946              		.loc 1 1258 11
 1947 0094 012B     		cmp	r3, #1
 1948 0096 03D1     		bne	.L135
1259:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1260:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 1949              		.loc 1 1260 33
 1950 0098 7B68     		ldr	r3, [r7, #4]
 1951 009a 0122     		movs	r2, #1
 1952 009c DA60     		str	r2, [r3, #12]
 1953 009e 02E0     		b	.L134
 1954              	.L135:
1261:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1262:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1263:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1264:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 1955              		.loc 1 1264 33
 1956 00a0 7B68     		ldr	r3, [r7, #4]
 1957 00a2 0022     		movs	r2, #0
 1958 00a4 DA60     		str	r2, [r3, #12]
 1959              	.L134:
1265:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1266:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1267:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1268:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->CSR & RCC_CSR_LSION) == RCC_CSR_LSION)
 1960              		.loc 1 1268 11
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 58


 1961 00a6 164B     		ldr	r3, .L140
 1962 00a8 5B6A     		ldr	r3, [r3, #36]
 1963              		.loc 1 1268 17
 1964 00aa 03F00103 		and	r3, r3, #1
 1965              		.loc 1 1268 6
 1966 00ae 012B     		cmp	r3, #1
 1967 00b0 03D1     		bne	.L136
1269:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1270:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 1968              		.loc 1 1270 33
 1969 00b2 7B68     		ldr	r3, [r7, #4]
 1970 00b4 0122     		movs	r2, #1
 1971 00b6 9A61     		str	r2, [r3, #24]
 1972 00b8 02E0     		b	.L137
 1973              	.L136:
1271:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1272:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1273:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1274:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 1974              		.loc 1 1274 33
 1975 00ba 7B68     		ldr	r3, [r7, #4]
 1976 00bc 0022     		movs	r2, #0
 1977 00be 9A61     		str	r2, [r3, #24]
 1978              	.L137:
1275:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1276:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1277:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1278:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1279:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_PLLON) == RCC_CR_PLLON)
 1979              		.loc 1 1279 11
 1980 00c0 0F4B     		ldr	r3, .L140
 1981 00c2 1B68     		ldr	r3, [r3]
 1982              		.loc 1 1279 16
 1983 00c4 03F08073 		and	r3, r3, #16777216
 1984              		.loc 1 1279 6
 1985 00c8 B3F1807F 		cmp	r3, #16777216
 1986 00cc 03D1     		bne	.L138
1280:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1281:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 1987              		.loc 1 1281 37
 1988 00ce 7B68     		ldr	r3, [r7, #4]
 1989 00d0 0222     		movs	r2, #2
 1990 00d2 DA61     		str	r2, [r3, #28]
 1991 00d4 02E0     		b	.L139
 1992              	.L138:
1282:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1283:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1284:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1285:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 1993              		.loc 1 1285 37
 1994 00d6 7B68     		ldr	r3, [r7, #4]
 1995 00d8 0122     		movs	r2, #1
 1996 00da DA61     		str	r2, [r3, #28]
 1997              	.L139:
1286:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1287:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 1998              		.loc 1 1287 52
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 59


 1999 00dc 084B     		ldr	r3, .L140
 2000 00de 5B68     		ldr	r3, [r3, #4]
 2001              		.loc 1 1287 38
 2002 00e0 03F48032 		and	r2, r3, #65536
 2003              		.loc 1 1287 36
 2004 00e4 7B68     		ldr	r3, [r7, #4]
 2005 00e6 1A62     		str	r2, [r3, #32]
1288:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMULL);
 2006              		.loc 1 1288 49
 2007 00e8 054B     		ldr	r3, .L140
 2008 00ea 5B68     		ldr	r3, [r3, #4]
 2009              		.loc 1 1288 35
 2010 00ec 03F47012 		and	r2, r3, #3932160
 2011              		.loc 1 1288 33
 2012 00f0 7B68     		ldr	r3, [r7, #4]
 2013 00f2 5A62     		str	r2, [r3, #36]
1289:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
1290:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL2 configuration -----------------------------------------------*/
1291:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC->CR & RCC_CR_PLL2ON) == RCC_CR_PLL2ON)
1292:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1293:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_ON;
1294:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1295:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1296:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1297:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_OFF;
1298:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1299:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.HSEPrediv2Value = __HAL_RCC_HSE_GET_PREDIV2();
1300:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.PLL2MUL = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PLL2MUL);
1301:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
1302:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2014              		.loc 1 1302 1
 2015 00f4 00BF     		nop
 2016 00f6 0C37     		adds	r7, r7, #12
 2017              		.cfi_def_cfa_offset 4
 2018 00f8 BD46     		mov	sp, r7
 2019              		.cfi_def_cfa_register 13
 2020              		@ sp needed
 2021 00fa 80BC     		pop	{r7}
 2022              		.cfi_restore 7
 2023              		.cfi_def_cfa_offset 0
 2024 00fc 7047     		bx	lr
 2025              	.L141:
 2026 00fe 00BF     		.align	2
 2027              	.L140:
 2028 0100 00100240 		.word	1073876992
 2029              		.cfi_endproc
 2030              	.LFE75:
 2032              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2033              		.align	1
 2034              		.global	HAL_RCC_GetClockConfig
 2035              		.syntax unified
 2036              		.thumb
 2037              		.thumb_func
 2038              		.fpu softvfp
 2040              	HAL_RCC_GetClockConfig:
 2041              	.LFB76:
1303:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 60


1304:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1305:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal
1306:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1307:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that
1308:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * contains the current clock configuration.
1309:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1310:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1311:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1312:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1313:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2042              		.loc 1 1313 1
 2043              		.cfi_startproc
 2044              		@ args = 0, pretend = 0, frame = 8
 2045              		@ frame_needed = 1, uses_anonymous_args = 0
 2046              		@ link register save eliminated.
 2047 0000 80B4     		push	{r7}
 2048              		.cfi_def_cfa_offset 4
 2049              		.cfi_offset 7, -4
 2050 0002 83B0     		sub	sp, sp, #12
 2051              		.cfi_def_cfa_offset 16
 2052 0004 00AF     		add	r7, sp, #0
 2053              		.cfi_def_cfa_register 7
 2054 0006 7860     		str	r0, [r7, #4]
 2055 0008 3960     		str	r1, [r7]
1314:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1315:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1316:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1317:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1318:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1319:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2056              		.loc 1 1319 32
 2057 000a 7B68     		ldr	r3, [r7, #4]
 2058 000c 0F22     		movs	r2, #15
 2059 000e 1A60     		str	r2, [r3]
1320:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1321:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1322:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2060              		.loc 1 1322 51
 2061 0010 114B     		ldr	r3, .L143
 2062 0012 5B68     		ldr	r3, [r3, #4]
 2063              		.loc 1 1322 37
 2064 0014 03F00302 		and	r2, r3, #3
 2065              		.loc 1 1322 35
 2066 0018 7B68     		ldr	r3, [r7, #4]
 2067 001a 5A60     		str	r2, [r3, #4]
1323:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1324:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1325:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 2068              		.loc 1 1325 52
 2069 001c 0E4B     		ldr	r3, .L143
 2070 001e 5B68     		ldr	r3, [r3, #4]
 2071              		.loc 1 1325 38
 2072 0020 03F0F002 		and	r2, r3, #240
 2073              		.loc 1 1325 36
 2074 0024 7B68     		ldr	r3, [r7, #4]
 2075 0026 9A60     		str	r2, [r3, #8]
1326:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 61


1327:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1328:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 2076              		.loc 1 1328 53
 2077 0028 0B4B     		ldr	r3, .L143
 2078 002a 5B68     		ldr	r3, [r3, #4]
 2079              		.loc 1 1328 39
 2080 002c 03F4E062 		and	r2, r3, #1792
 2081              		.loc 1 1328 37
 2082 0030 7B68     		ldr	r3, [r7, #4]
 2083 0032 DA60     		str	r2, [r3, #12]
1329:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1330:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1331:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 2084              		.loc 1 1331 54
 2085 0034 084B     		ldr	r3, .L143
 2086 0036 5B68     		ldr	r3, [r3, #4]
 2087              		.loc 1 1331 39
 2088 0038 DB08     		lsrs	r3, r3, #3
 2089 003a 03F4E062 		and	r2, r3, #1792
 2090              		.loc 1 1331 37
 2091 003e 7B68     		ldr	r3, [r7, #4]
 2092 0040 1A61     		str	r2, [r3, #16]
1332:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1333:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if   defined(FLASH_ACR_LATENCY)
1334:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1335:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 2093              		.loc 1 1335 32
 2094 0042 064B     		ldr	r3, .L143+4
 2095 0044 1B68     		ldr	r3, [r3]
 2096              		.loc 1 1335 16
 2097 0046 03F00702 		and	r2, r3, #7
 2098              		.loc 1 1335 14
 2099 004a 3B68     		ldr	r3, [r7]
 2100 004c 1A60     		str	r2, [r3]
1336:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1337:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* For VALUE lines devices, only LATENCY_0 can be set*/
1338:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)FLASH_LATENCY_0;
1339:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
1340:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2101              		.loc 1 1340 1
 2102 004e 00BF     		nop
 2103 0050 0C37     		adds	r7, r7, #12
 2104              		.cfi_def_cfa_offset 4
 2105 0052 BD46     		mov	sp, r7
 2106              		.cfi_def_cfa_register 13
 2107              		@ sp needed
 2108 0054 80BC     		pop	{r7}
 2109              		.cfi_restore 7
 2110              		.cfi_def_cfa_offset 0
 2111 0056 7047     		bx	lr
 2112              	.L144:
 2113              		.align	2
 2114              	.L143:
 2115 0058 00100240 		.word	1073876992
 2116 005c 00200240 		.word	1073881088
 2117              		.cfi_endproc
 2118              	.LFE76:
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 62


 2120              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2121              		.align	1
 2122              		.global	HAL_RCC_NMI_IRQHandler
 2123              		.syntax unified
 2124              		.thumb
 2125              		.thumb_func
 2126              		.fpu softvfp
 2128              	HAL_RCC_NMI_IRQHandler:
 2129              	.LFB77:
1341:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1342:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1343:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1344:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1345:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1346:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1347:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1348:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2130              		.loc 1 1348 1
 2131              		.cfi_startproc
 2132              		@ args = 0, pretend = 0, frame = 0
 2133              		@ frame_needed = 1, uses_anonymous_args = 0
 2134 0000 80B5     		push	{r7, lr}
 2135              		.cfi_def_cfa_offset 8
 2136              		.cfi_offset 7, -8
 2137              		.cfi_offset 14, -4
 2138 0002 00AF     		add	r7, sp, #0
 2139              		.cfi_def_cfa_register 7
1349:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1350:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if (__HAL_RCC_GET_IT(RCC_IT_CSS))
 2140              		.loc 1 1350 7
 2141 0004 064B     		ldr	r3, .L148
 2142 0006 9B68     		ldr	r3, [r3, #8]
 2143 0008 03F08003 		and	r3, r3, #128
 2144              		.loc 1 1350 6
 2145 000c 802B     		cmp	r3, #128
 2146 000e 04D1     		bne	.L147
1351:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1352:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1353:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2147              		.loc 1 1353 5
 2148 0010 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1354:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1355:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1356:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2149              		.loc 1 1356 5
 2150 0014 034B     		ldr	r3, .L148+4
 2151 0016 8022     		movs	r2, #128
 2152 0018 1A70     		strb	r2, [r3]
 2153              	.L147:
1357:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1358:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2154              		.loc 1 1358 1
 2155 001a 00BF     		nop
 2156 001c 80BD     		pop	{r7, pc}
 2157              	.L149:
 2158 001e 00BF     		.align	2
 2159              	.L148:
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 63


 2160 0020 00100240 		.word	1073876992
 2161 0024 0A100240 		.word	1073877002
 2162              		.cfi_endproc
 2163              	.LFE77:
 2165              		.section	.text.RCC_Delay,"ax",%progbits
 2166              		.align	1
 2167              		.syntax unified
 2168              		.thumb
 2169              		.thumb_func
 2170              		.fpu softvfp
 2172              	RCC_Delay:
 2173              	.LFB78:
1359:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1360:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1361:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
1362:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  mdelay: specifies the delay time length, in milliseconds.
1363:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1364:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1365:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** static void RCC_Delay(uint32_t mdelay)
1366:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2174              		.loc 1 1366 1
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 16
 2177              		@ frame_needed = 1, uses_anonymous_args = 0
 2178              		@ link register save eliminated.
 2179 0000 80B4     		push	{r7}
 2180              		.cfi_def_cfa_offset 4
 2181              		.cfi_offset 7, -4
 2182 0002 85B0     		sub	sp, sp, #20
 2183              		.cfi_def_cfa_offset 24
 2184 0004 00AF     		add	r7, sp, #0
 2185              		.cfi_def_cfa_register 7
 2186 0006 7860     		str	r0, [r7, #4]
1367:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 2187              		.loc 1 1367 56
 2188 0008 0A4B     		ldr	r3, .L152
 2189 000a 1B68     		ldr	r3, [r3]
 2190 000c 0A4A     		ldr	r2, .L152+4
 2191 000e A2FB0323 		umull	r2, r3, r2, r3
 2192 0012 5B0A     		lsrs	r3, r3, #9
 2193              		.loc 1 1367 32
 2194 0014 7A68     		ldr	r2, [r7, #4]
 2195 0016 02FB03F3 		mul	r3, r2, r3
 2196              		.loc 1 1367 17
 2197 001a FB60     		str	r3, [r7, #12]
 2198              	.L151:
1368:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   do
1369:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1370:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __NOP();
 2199              		.loc 1 1370 5 discriminator 1
 2200              		.syntax unified
 2201              	@ 1370 "./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c" 1
 2202 001c 00BF     		nop
 2203              	@ 0 "" 2
1371:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1372:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (Delay --);
 2204              		.loc 1 1372 16 discriminator 1
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 64


 2205              		.thumb
 2206              		.syntax unified
 2207 001e FB68     		ldr	r3, [r7, #12]
 2208 0020 5A1E     		subs	r2, r3, #1
 2209 0022 FA60     		str	r2, [r7, #12]
 2210              		.loc 1 1372 3 discriminator 1
 2211 0024 002B     		cmp	r3, #0
 2212 0026 F9D1     		bne	.L151
1373:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2213              		.loc 1 1373 1
 2214 0028 00BF     		nop
 2215 002a 00BF     		nop
 2216 002c 1437     		adds	r7, r7, #20
 2217              		.cfi_def_cfa_offset 4
 2218 002e BD46     		mov	sp, r7
 2219              		.cfi_def_cfa_register 13
 2220              		@ sp needed
 2221 0030 80BC     		pop	{r7}
 2222              		.cfi_restore 7
 2223              		.cfi_def_cfa_offset 0
 2224 0032 7047     		bx	lr
 2225              	.L153:
 2226              		.align	2
 2227              	.L152:
 2228 0034 00000000 		.word	SystemCoreClock
 2229 0038 D34D6210 		.word	274877907
 2230              		.cfi_endproc
 2231              	.LFE78:
 2233              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2234              		.align	1
 2235              		.weak	HAL_RCC_CSSCallback
 2236              		.syntax unified
 2237              		.thumb
 2238              		.thumb_func
 2239              		.fpu softvfp
 2241              	HAL_RCC_CSSCallback:
 2242              	.LFB79:
1374:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1375:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1376:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1377:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval none
1378:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1379:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1380:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2243              		.loc 1 1380 1
 2244              		.cfi_startproc
 2245              		@ args = 0, pretend = 0, frame = 0
 2246              		@ frame_needed = 1, uses_anonymous_args = 0
 2247              		@ link register save eliminated.
 2248 0000 80B4     		push	{r7}
 2249              		.cfi_def_cfa_offset 4
 2250              		.cfi_offset 7, -4
 2251 0002 00AF     		add	r7, sp, #0
 2252              		.cfi_def_cfa_register 7
1381:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1382:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     the HAL_RCC_CSSCallback could be implemented in the user file
1383:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     */
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 65


1384:./Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2253              		.loc 1 1384 1
 2254 0004 00BF     		nop
 2255 0006 BD46     		mov	sp, r7
 2256              		.cfi_def_cfa_register 13
 2257              		@ sp needed
 2258 0008 80BC     		pop	{r7}
 2259              		.cfi_restore 7
 2260              		.cfi_def_cfa_offset 0
 2261 000a 7047     		bx	lr
 2262              		.cfi_endproc
 2263              	.LFE79:
 2265              		.text
 2266              	.Letext0:
 2267              		.file 2 "c:\\st\\stm32cubeide_1.7.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externaltools
 2268              		.file 3 "c:\\st\\stm32cubeide_1.7.0\\stm32cubeide\\plugins\\com.st.stm32cube.ide.mcu.externaltools
 2269              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 2270              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2271              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2272              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2273              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2274              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 2275              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2276              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2277              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 66


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_rcc.c
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:16     .text.HAL_RCC_DeInit:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:24     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:224    .text.HAL_RCC_DeInit:0000000000000124 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:232    .text.HAL_RCC_OscConfig:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:239    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2172   .text.RCC_Delay:0000000000000000 RCC_Delay
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:648    .text.HAL_RCC_OscConfig:000000000000026c $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:653    .text.HAL_RCC_OscConfig:0000000000000278 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1065   .text.HAL_RCC_OscConfig:00000000000004f4 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1072   .text.HAL_RCC_ClockConfig:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1079   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1564   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1375   .text.HAL_RCC_ClockConfig:00000000000001c0 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1384   .text.HAL_RCC_MCOConfig:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1391   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1464   .text.HAL_RCC_MCOConfig:0000000000000068 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1470   .text.HAL_RCC_EnableCSS:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1477   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1506   .text.HAL_RCC_EnableCSS:0000000000000014 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1511   .text.HAL_RCC_DisableCSS:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1518   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1547   .text.HAL_RCC_DisableCSS:0000000000000014 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1552   .rodata:0000000000000000 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1557   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1696   .text.HAL_RCC_GetSysClockFreq:00000000000000b0 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1704   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1711   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1738   .text.HAL_RCC_GetHCLKFreq:0000000000000010 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1743   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1750   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1782   .text.HAL_RCC_GetPCLK1Freq:0000000000000020 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1788   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1795   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1827   .text.HAL_RCC_GetPCLK2Freq:0000000000000020 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1833   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:1840   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2028   .text.HAL_RCC_GetOscConfig:0000000000000100 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2033   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2040   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2115   .text.HAL_RCC_GetClockConfig:0000000000000058 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2121   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2128   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2241   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2160   .text.HAL_RCC_NMI_IRQHandler:0000000000000020 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2166   .text.RCC_Delay:0000000000000000 $t
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2228   .text.RCC_Delay:0000000000000034 $d
C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s:2234   .text.HAL_RCC_CSSCallback:0000000000000000 $t
                           .group:0000000000000000 wm4.0.e890922d021f7fff2fbf219cb2b38f03
                           .group:0000000000000000 wm4.stm32f1xx_hal_conf.h.21.43378aa0698cb088dbf078b8e78794f7
                           .group:0000000000000000 wm4.stm32f1xx.h.39.208bb8a61c892b7c37d899c49a031330
                           .group:0000000000000000 wm4.stm32f103xb.h.38.ec967d5ad9d3269cb0788eebda048e38
                           .group:0000000000000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:0000000000000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:0000000000000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:0000000000000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
ARM GAS  C:\Users\tamqu\AppData\Local\Temp\ccnde0AU.s 			page 67


                           .group:0000000000000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:0000000000000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:0000000000000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:0000000000000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:0000000000000000 wm4.cmsis_gcc.h.26.225e4f5469716fdeef823d1102f5b23e
                           .group:0000000000000000 wm4.core_cm3.h.127.f4474120f1a7524deb56f9d74ff175da
                           .group:0000000000000000 wm4.stm32f103xb.h.573.10249aa7473ca93be896fed94046a725
                           .group:0000000000000000 wm4.stm32f1xx.h.162.96b09079a093c34dbd7f0b85cbd0ddee
                           .group:0000000000000000 wm4.stm32_hal_legacy.h.23.91ba5b544a4c2be2620a1e7ff0049e10
                           .group:0000000000000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:0000000000000000 wm4.stm32f1xx_hal_def.h.57.18d01ce1aa74e9fb44dbf16f821a574a
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.95.21591bbc513aaa813c0b8640c3b32517
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc_ex.h.22.8763f99bc1e3e2dcf0febe9161d81b37
                           .group:0000000000000000 wm4.stm32f1xx_hal_rcc.h.1202.f8e5f9e0cf4eef7840facf5396029056
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.22.fa638d688dcc57ca806fe6a7831b0d04
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio_ex.h.22.51a50ef3512cd78017ce666a32d364bf
                           .group:0000000000000000 wm4.stm32f1xx_hal_gpio.h.263.f5ebf2f545ade59412ab9261c8e35dc4
                           .group:0000000000000000 wm4.stm32f1xx_hal_exti.h.22.e26491d042c8079c3ca67eca341af862
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.22.3c14338534886827bf3aeaa2a7f412a1
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma_ex.h.22.001ac4d7f81ccbdcae49bd65c13858c8
                           .group:0000000000000000 wm4.stm32f1xx_hal_dma.h.409.cafcd2cfe701091535636be537c18293
                           .group:0000000000000000 wm4.stm32f1xx_hal_cortex.h.22.b5f4174bb6a50d95405567b8f50e0900
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash.h.22.5cea9a7210e6315b41724b47b5fdf203
                           .group:0000000000000000 wm4.stm32f1xx_hal_flash_ex.h.22.d4e19c21f2a86fa2f8ec2c2d5f1ab2af
                           .group:0000000000000000 wm4.stm32f1xx_hal_pwr.h.22.3438c476faafc3240bf146f143df3fcd
                           .group:0000000000000000 wm4.stm32f1xx_hal_tim.h.22.a16e206564e97dbace9faae59a0d6008
                           .group:0000000000000000 wm4.stm32f1xx_hal.h.88.91065c0692bed6019c34f1e9c00589fd

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
APBPrescTable
